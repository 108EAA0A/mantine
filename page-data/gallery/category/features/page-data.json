{"componentChunkName":"component---src-components-gallery-gallery-category-page-tsx","path":"/gallery/category/features/","result":{"pageContext":{"category":{"slug":"features","name":"Features section"},"components":[{"_component":"FeaturesGrid","code":"import React from 'react';\nimport { createUseStyles } from 'react-jss';\nimport {\n  ThemeIcon,\n  Text,\n  theming,\n  Title,\n  Container,\n  SimpleGrid,\n  useMantineTheme,\n} from '@mantine/core';\nimport { MOCKDATA } from './mockdata';\n\ninterface FeatureProps {\n  icon: React.FC<any>;\n  title: React.ReactNode;\n  description: React.ReactNode;\n}\n\nexport function Feature({\n  icon: Icon,\n  title,\n  description,\n  ...others\n}: FeatureProps & Omit<React.ComponentPropsWithoutRef<'div'>, keyof FeatureProps>) {\n  const theme = useMantineTheme();\n  return (\n    <div {...others}>\n      <ThemeIcon variant=\"light\" size={40} radius={40}>\n        <Icon style={{ width: 20, height: 20 }} />\n      </ThemeIcon>\n      <Text style={{ marginTop: theme.spacing.sm, marginBottom: 7 }}>{title}</Text>\n      <Text size=\"sm\" color=\"dimmed\" style={{ lineHeight: 1.6 }}>\n        {description}\n      </Text>\n    </div>\n  );\n}\n\nconst useStyles = createUseStyles(\n  (theme) => ({\n    wrapper: {\n      paddingTop: theme.spacing.xl * 4,\n      paddingBottom: theme.spacing.xl * 4,\n    },\n\n    title: {\n      fontFamily: 'Dosis, sans-serif',\n      fontWeight: 900,\n      marginBottom: theme.spacing.md,\n      textAlign: 'center',\n\n      '@media (max-width: 755px)': {\n        fontSize: 28,\n        textAlign: 'left',\n      },\n    },\n\n    description: {\n      textAlign: 'center',\n\n      '@media (max-width: 755px)': {\n        textAlign: 'left',\n      },\n    },\n\n    features: {\n      marginTop: [[theme.spacing.xl], '!important'],\n    },\n  }),\n  { theming }\n);\n\ninterface FeaturesGridProps {\n  title: React.ReactNode;\n  description: React.ReactNode;\n  data?: FeatureProps[];\n}\n\nexport function FeaturesGrid({ title, description, data = MOCKDATA }: FeaturesGridProps) {\n  const classes = useStyles();\n  const theme = useMantineTheme();\n  const features = data.map((feature, index) => <Feature {...feature} key={index} />);\n\n  return (\n    <Container className={classes.wrapper}>\n      <Title className={classes.title}>{title}</Title>\n\n      <Container size={560} padding={0}>\n        <Text size=\"sm\" className={classes.description}>\n          {description}\n        </Text>\n      </Container>\n\n      <SimpleGrid\n        className={classes.features}\n        cols={3}\n        spacing={theme.spacing.xl * 2}\n        breakpoints={[\n          { maxWidth: 980, cols: 2, spacing: 'xl' },\n          { maxWidth: 755, cols: 1, spacing: 'xl' },\n        ]}\n      >\n        {features}\n      </SimpleGrid>\n    </Container>\n  );\n}\n","category":{"name":"Features section","path":"/gallery/category/features/"},"url":"/gallery/component/features-grid","attributes":{"title":"Features with monotone icons","category":"features","author":"rtivital","responsive":true,"withColor":true,"dependencies":["/core/theme-icon/","/core/title/","/core/text/","/core/container/","/core/simple-grid/","@modulz/radix-icons"],"props":{"title":"Integrate effortlessly with any technology stack","description":"Every once in a while, you’ll see a Golbat that’s missing some fangs. This happens when hunger drives it to try biting a Steel-type Pokémon."},"canvas":{"center":false}}},{"_component":"FeaturesImages","code":"import React from 'react';\nimport { createUseStyles } from 'react-jss';\nimport {\n  theming,\n  Image,\n  Text,\n  Container,\n  ThemeIcon,\n  Title,\n  SimpleGrid,\n  hexToRgba,\n} from '@mantine/core';\nimport IMAGES from './images';\n\nconst useStyles = createUseStyles(\n  (theme) => ({\n    wrapper: {\n      paddingTop: 80,\n      paddingBottom: 50,\n    },\n\n    item: {\n      display: 'flex',\n    },\n\n    itemIcon: {\n      padding: theme.spacing.xs,\n      marginRight: theme.spacing.md,\n    },\n\n    itemTitle: {\n      marginBottom: theme.spacing.xs / 2,\n    },\n\n    supTitle: {\n      textAlign: 'center',\n      textTransform: 'uppercase',\n      fontWeight: 800,\n      fontSize: theme.fontSizes.sm,\n      color: theme.colors[theme.primaryColor][theme.colorScheme === 'dark' ? 4 : 8],\n      letterSpacing: 0.5,\n    },\n\n    title: {\n      lineHeight: 1,\n      textAlign: 'center',\n      marginTop: theme.spacing.xl,\n    },\n\n    description: {\n      textAlign: 'center',\n      marginTop: theme.spacing.xs,\n    },\n\n    highlight: {\n      backgroundColor:\n        theme.colorScheme === 'dark'\n          ? hexToRgba(theme.colors[theme.primaryColor][6], 0.55)\n          : theme.colors[theme.primaryColor][0],\n      padding: 5,\n      paddingTop: 0,\n      borderRadius: theme.radius.sm,\n      display: 'inline-block',\n      color: theme.colorScheme === 'dark' ? theme.white : 'inherit',\n    },\n  }),\n  { theming }\n);\n\ninterface FeatureImage {\n  image: string;\n  title: React.ReactNode;\n  description: React.ReactNode;\n}\n\ninterface FeaturesImagesProps {\n  supTitle: React.ReactNode;\n  description: React.ReactNode;\n  data: FeatureImage[];\n}\n\nexport function FeaturesImages({ supTitle, description, data }: FeaturesImagesProps) {\n  const classes = useStyles();\n\n  const items = data.map((item) => (\n    <div className={classes.item} key={item.image}>\n      <ThemeIcon variant=\"light\" className={classes.itemIcon} size={60} radius=\"md\">\n        <Image src={IMAGES[item.image]} />\n      </ThemeIcon>\n\n      <div>\n        <Text weight={700} size=\"lg\" className={classes.itemTitle}>\n          {item.title}\n        </Text>\n        <Text color=\"dimmed\">{item.description}</Text>\n      </div>\n    </div>\n  ));\n\n  return (\n    <Container size={700} className={classes.wrapper}>\n      <Text className={classes.supTitle}>{supTitle}</Text>\n\n      <Title className={classes.title} order={2}>\n        GreatAudit is <span className={classes.highlight}>not</span> just for auditors\n      </Title>\n\n      <Container size={660} padding={0}>\n        <Text color=\"dimmed\" className={classes.description}>\n          {description}\n        </Text>\n      </Container>\n\n      <SimpleGrid\n        cols={2}\n        spacing={50}\n        breakpoints={[{ maxWidth: 550, cols: 1, spacing: 40 }]}\n        style={{ marginTop: 30 }}\n      >\n        {items}\n      </SimpleGrid>\n    </Container>\n  );\n}\n","category":{"name":"Features section","path":"/gallery/category/features/"},"url":"/gallery/component/features-images","attributes":{"title":"Features with image icons","category":"features","author":"rtivital","responsive":true,"withColor":true,"dependencies":["/core/theme-icon/","/core/title/","/core/text/","/core/container/","/core/simple-grid/","/core/image/"],"props":{"supTitle":"Use cases","description":"GreatAudit is completely flexible to your company’s specific needs. It can be used for any type of secure file exchange and communication between companies and their clients.","data":[{"image":"auditors","title":"Auditors","description":"Prepare EoY audits, special audits, or due diligence cases"},{"image":"lawyers","title":"Lawyers","description":"Exchange confidential case files and related information"},{"image":"accountants","title":"Accountants","description":"Gather financial information to complete tax returns"},{"image":"others","title":"Others","description":"Request any files and information from your clients."}]},"canvas":{"center":false}}}]}},"staticQueryHashes":["2731172446","3701445061","655967936"]}