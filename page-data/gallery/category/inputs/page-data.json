{"componentChunkName":"component---src-components-gallery-gallery-category-page-tsx","path":"/gallery/category/inputs/","result":{"pageContext":{"category":{"slug":"inputs","name":"Inputs"},"components":[{"_component":"CheckboxCard","code":"import React from 'react';\nimport { UnstyledButton, Checkbox, Text, createStyles } from '@mantine/core';\nimport { useUncontrolled } from '@mantine/hooks';\n\nconst useStyles = createStyles((theme) => ({\n  button: {\n    display: 'flex',\n    width: '100%',\n    border: `1px solid ${\n      theme.colorScheme === 'dark' ? theme.colors.dark[8] : theme.colors.gray[3]\n    }`,\n    borderRadius: theme.radius.sm,\n    padding: theme.spacing.lg,\n    backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[8] : theme.white,\n\n    '&:hover': {\n      backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[9] : theme.colors.gray[0],\n    },\n  },\n\n  checkbox: {\n    marginRight: theme.spacing.xl,\n  },\n\n  title: {\n    marginBottom: 7,\n    lineHeight: 1,\n  },\n}));\n\ninterface CheckboxCardProps {\n  checked?: boolean;\n  defaultChecked?: boolean;\n  onChange?(checked: boolean): void;\n  title: React.ReactNode;\n  description: React.ReactNode;\n}\n\nexport function CheckboxCard({\n  checked,\n  defaultChecked,\n  onChange,\n  title,\n  description,\n  className,\n  ...others\n}: CheckboxCardProps & Omit<React.ComponentPropsWithoutRef<'button'>, keyof CheckboxCardProps>) {\n  const { classes, cx } = useStyles();\n\n  const [value, handleChange] = useUncontrolled({\n    value: checked,\n    defaultValue: defaultChecked,\n    finalValue: false,\n    onChange,\n    rule: (val) => typeof val === 'boolean',\n  });\n\n  return (\n    <UnstyledButton\n      {...others}\n      onClick={() => handleChange(!value)}\n      className={cx(classes.button, 'hello', className)}\n    >\n      <Checkbox\n        className={classes.checkbox}\n        checked={value}\n        onChange={() => {}}\n        tabIndex={-1}\n        size=\"md\"\n      />\n      <div>\n        <Text weight={500} className={classes.title}>\n          {title}\n        </Text>\n        <Text size=\"sm\" color=\"dimmed\">\n          {description}\n        </Text>\n      </div>\n    </UnstyledButton>\n  );\n}\n","category":{"name":"Inputs","path":"/gallery/category/inputs/"},"url":"/gallery/component/checkbox-card","attributes":{"title":"Card with checkbox","category":"inputs","author":"rtivital","dependencies":["/core/card/","/core/checkbox/","/core/text/","/core/button/#unstyled-button","/hooks/use-uncontrolled/"],"props":{"title":"@mantine/core","description":"Core components library: inputs, buttons, overlays, etc."},"canvas":{"center":true,"maxWidth":400}}},{"_component":"ContainedInputs","code":"import React from 'react';\nimport { createStyles, Select, TextInput } from '@mantine/core';\nimport { DatePicker } from '@mantine/dates';\n\nconst useStyles = createStyles((theme) => ({\n  root: {\n    position: 'relative',\n  },\n\n  input: {\n    height: 'auto',\n    paddingTop: 22,\n  },\n\n  label: {\n    position: 'absolute',\n    pointerEvents: 'none',\n    paddingLeft: theme.spacing.sm,\n    paddingTop: theme.spacing.sm / 2,\n    zIndex: 1,\n  },\n}));\n\nexport function ContainedInputs() {\n  // You can add these classes as classNames to any Mantine input, it will work the same\n  const { classes } = useStyles();\n\n  return (\n    <div>\n      <TextInput label=\"Shipping address\" placeholder=\"15329 Huston 21st\" classNames={classes} />\n\n      <Select\n        style={{ marginTop: 20, zIndex: 2 }}\n        data={['React', 'Angular', 'Svelte', 'Vue']}\n        placeholder=\"Pick one\"\n        label=\"Your favorite library/framework\"\n        classNames={classes}\n      />\n\n      <DatePicker\n        style={{ marginTop: 20 }}\n        label=\"Departure date\"\n        placeholder=\"When will you leave?\"\n        classNames={classes}\n        clearable={false}\n      />\n    </div>\n  );\n}\n","category":{"name":"Inputs","path":"/gallery/category/inputs/"},"url":"/gallery/component/contained-inputs","attributes":{"title":"Inputs with label inside input","category":"inputs","author":"rtivital","dependencies":["/core/select/","/core/text-input/","/dates/date-picker/"],"canvas":{"center":true,"maxWidth":420}}},{"_component":"CountriesSelect","code":"import React, { forwardRef } from 'react';\nimport Flag from 'react-flagpack';\nimport {\n  useMantineTheme,\n  CloseButton,\n  MultiSelect,\n  MultiSelectValueProps,\n  SelectItemProps,\n} from '@mantine/core';\nimport { countriesData } from './countries-data';\n\nfunction Value({\n  value,\n  label,\n  onRemove,\n  classNames,\n  ...others\n}: MultiSelectValueProps & { value: string }) {\n  const theme = useMantineTheme();\n\n  return (\n    <div {...others}>\n      <div\n        style={{\n          display: 'flex',\n          cursor: 'default',\n          alignItems: 'center',\n          backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[7] : theme.white,\n          border: `1px solid ${\n            theme.colorScheme === 'dark' ? theme.colors.dark[7] : theme.colors.gray[4]\n          }`,\n          paddingLeft: 10,\n          borderRadius: 4,\n        }}\n      >\n        <div style={{ marginRight: 10 }}>\n          <Flag code={value} size=\"S\" />\n        </div>\n        <div style={{ lineHeight: 1, fontSize: 12 }}>{label}</div>\n        <CloseButton onClick={onRemove} variant=\"transparent\" size={22} iconSize={14} />\n      </div>\n    </div>\n  );\n}\n\nconst Item = forwardRef<HTMLDivElement, SelectItemProps>(\n  ({ label, value, ...others }: SelectItemProps, ref) => (\n    <div ref={ref} {...others}>\n      <div style={{ display: 'flex' }}>\n        <div style={{ marginRight: 10 }}>\n          <Flag code={value} size=\"S\" />\n        </div>\n        <div>{label}</div>\n      </div>\n    </div>\n  )\n);\n\nexport function CountriesSelect() {\n  return (\n    <MultiSelect\n      data={countriesData}\n      limit={20}\n      valueComponent={Value}\n      itemComponent={Item}\n      searchable\n      defaultValue={['US', 'DE']}\n      placeholder=\"Pick countries\"\n      label=\"Which countries did you visit last year?\"\n    />\n  );\n}\n","category":{"name":"Inputs","path":"/gallery/category/inputs/"},"url":"/gallery/component/countries-select","attributes":{"title":"Multiple countries select","category":"inputs","author":"rtivital","dependencies":["/core/multi-select/","/core/action-icon/#close-button","react-flagpack"],"canvas":{"center":true,"maxWidth":360}}},{"_component":"InlineForm","code":"import React from 'react';\nimport { createStyles, Autocomplete, NumberInput, Button } from '@mantine/core';\nimport dayjs from 'dayjs';\nimport { DateRangePicker } from '@mantine/dates';\n\nconst useStyles = createStyles((theme, _params, getRef) => {\n  const input = getRef('input');\n\n  return {\n    wrapper: {\n      '@media (max-width: 755px)': {\n        padding: theme.spacing.lg,\n      },\n    },\n\n    fields: {\n      display: 'flex',\n      alignItems: 'flex-end',\n\n      '@media (max-width: 755px)': {\n        display: 'block',\n      },\n    },\n\n    field: {\n      flex: 1,\n\n      [`&:first-of-type .${input}`]: {\n        borderTopLeftRadius: theme.radius.md,\n        borderBottomLeftRadius: theme.radius.md,\n\n        '&:not(:focus)': {\n          borderLeftColor: theme.colors.gray[2],\n        },\n      },\n\n      [`&:not(:first-of-type) .${input}`]: {\n        borderLeftWidth: 0,\n\n        '@media (max-width: 755px)': {\n          borderLeftWidth: 1,\n          borderRightWidth: 1,\n        },\n      },\n\n      '@media (max-width: 755px)': {\n        width: '100%',\n        maxWidth: '100% !important',\n\n        '&:not(:last-of-type)': {\n          marginBottom: theme.spacing.md,\n        },\n      },\n    },\n\n    input: {\n      ref: input,\n      borderColor: `${\n        theme.colorScheme === 'dark' ? theme.colors.dark[5] : theme.colors.gray[2]\n      } !important`,\n      height: 60,\n      paddingLeft: theme.spacing.xl,\n      fontSize: theme.fontSizes.md,\n      borderLeftColor: theme.colors.gray[4],\n\n      '@media (max-width: 755px)': {\n        borderRadius: theme.radius.md,\n      },\n    },\n\n    inputLabel: {\n      marginBottom: 9,\n    },\n\n    budgetField: {\n      maxWidth: 120,\n    },\n\n    destinationField: {\n      maxWidth: 280,\n    },\n\n    control: {\n      height: 60,\n      borderTopLeftRadius: 0,\n      borderBottomLeftRadius: 0,\n\n      '@media (max-width: 755px)': {\n        width: '100%',\n        marginLeft: 0,\n        marginTop: theme.spacing.lg,\n        borderTopLeftRadius: theme.radius.md,\n        borderBottomLeftRadius: theme.radius.md,\n      },\n    },\n  };\n});\n\ninterface InlineFormProps extends React.ComponentPropsWithoutRef<'div'> {\n  labelClassName?: string;\n}\n\nexport function InlineForm({ labelClassName, ...props }: InlineFormProps) {\n  const { classes, cx } = useStyles();\n\n  return (\n    <div {...props} className={cx(classes.wrapper, props.className)}>\n      <div className={classes.fields}>\n        <Autocomplete\n          radius={0}\n          size=\"md\"\n          data={['Australia', 'United Kingdom', 'Germany', 'Russia', 'Canada']}\n          className={cx(classes.field, classes.destinationField)}\n          placeholder=\"Destination country\"\n          label=\"Destination\"\n          variant=\"default\"\n          classNames={{ input: classes.input, label: cx(classes.inputLabel, labelClassName) }}\n        />\n\n        <DateRangePicker\n          radius={0}\n          size=\"md\"\n          className={classes.field}\n          placeholder=\"Stay dates\"\n          label=\"Stay dates\"\n          minDate={new Date()}\n          initialMonth={dayjs(new Date()).add(1, 'month').toDate()}\n          inputFormat=\"MMM D\"\n          variant=\"default\"\n          classNames={{ input: classes.input, label: cx(classes.inputLabel, labelClassName) }}\n        />\n\n        <NumberInput\n          radius={0}\n          size=\"md\"\n          className={cx(classes.field, classes.budgetField)}\n          label=\"Budget\"\n          min={150}\n          step={50}\n          defaultValue={500}\n          hideControls\n          variant=\"default\"\n          classNames={{ input: classes.input, label: cx(classes.inputLabel, labelClassName) }}\n        />\n\n        <Button className={classes.control} radius=\"md\" size=\"lg\">\n          Search\n        </Button>\n      </div>\n    </div>\n  );\n}\n","category":{"name":"Inputs","path":"/gallery/category/inputs/"},"url":"/gallery/component/inline-form","attributes":{"title":"Inline form","category":"inputs","author":"rtivital","responsive":true,"withColor":true,"dependencies":["/core/paper/","/core/autocomplete/","/dates/date-picker/","/core/number-input/","/core/button/"],"canvas":{"center":true,"maxWidth":820}}},{"_component":"InputWithButton","code":"import React from 'react';\nimport { TextInput, TextInputProps, Button } from '@mantine/core';\nimport { MagnifyingGlassIcon } from '@modulz/radix-icons';\n\nexport function InputWithButton(props: TextInputProps) {\n  return (\n    <TextInput\n      icon={<MagnifyingGlassIcon style={{ width: 20, height: 20 }} />}\n      radius=\"xl\"\n      size=\"md\"\n      rightSection={\n        <Button radius=\"xl\" style={{ height: 32 }}>\n          Search\n        </Button>\n      }\n      placeholder=\"Search questions\"\n      rightSectionWidth={100}\n      {...props}\n    />\n  );\n}\n","category":{"name":"Inputs","path":"/gallery/category/inputs/"},"url":"/gallery/component/input-with-button","attributes":{"title":"Input with contained button","category":"inputs","author":"rtivital","withColor":true,"dependencies":["/core/text-input/","/core/button/"],"canvas":{"center":true,"maxWidth":520}}},{"_component":"SliderInput","code":"import React, { useState } from 'react';\nimport { createStyles, NumberInput, Slider } from '@mantine/core';\n\nconst useStyles = createStyles((theme) => ({\n  wrapper: {\n    position: 'relative',\n  },\n\n  input: {\n    height: 'auto',\n    paddingTop: 22,\n    paddingBottom: 3,\n    borderBottomRightRadius: 0,\n    borderBottomLeftRadius: 0,\n  },\n\n  label: {\n    position: 'absolute',\n    pointerEvents: 'none',\n    paddingLeft: theme.spacing.sm,\n    paddingTop: theme.spacing.sm / 2,\n    zIndex: 1,\n  },\n\n  slider: {\n    position: 'absolute',\n    width: '100%',\n    bottom: -1,\n  },\n\n  thumb: {\n    width: 16,\n    height: 16,\n  },\n\n  track: {\n    backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[3] : theme.colors.gray[4],\n  },\n}));\n\nexport function SliderInput() {\n  const { classes } = useStyles();\n  const [value, setValue] = useState(2200);\n  return (\n    <div className={classes.wrapper}>\n      <NumberInput\n        value={value}\n        onChange={setValue}\n        label=\"Your daily kcal consumption\"\n        step={50}\n        min={0}\n        max={8000}\n        hideControls\n        classNames={{ input: classes.input, label: classes.label }}\n      />\n      <Slider\n        max={8000}\n        step={50}\n        min={0}\n        label={null}\n        value={value}\n        onChange={setValue}\n        size={2}\n        radius={0}\n        className={classes.slider}\n        classNames={{ thumb: classes.thumb, track: classes.track }}\n      />\n    </div>\n  );\n}\n","category":{"name":"Inputs","path":"/gallery/category/inputs/"},"url":"/gallery/component/slider-input","attributes":{"title":"NumberInput with slider","category":"inputs","author":"rtivital","withColor":true,"dependencies":["/core/number-input/","/core/slider/"],"canvas":{"center":true,"maxWidth":420}}}]}},"staticQueryHashes":["2731172446","3701445061","655967936"]}