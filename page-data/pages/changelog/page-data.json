{"componentChunkName":"component---src-pages-mdx-slug-tsx","path":"/pages/changelog/","result":{"data":{"mdx":{"headings":[{"depth":1,"value":"Changelog"},{"depth":2,"value":"2.2.0 – August 2021"},{"depth":3,"value":"New components and hooks"},{"depth":3,"value":"Other changes"},{"depth":2,"value":"2.1.0 – July 2021"},{"depth":3,"value":"New hooks and components"},{"depth":3,"value":"Other new features"},{"depth":2,"value":"2.0.0 – July 2021"},{"depth":3,"value":"Breaking changes"},{"depth":3,"value":"New theming options"},{"depth":3,"value":"@mantine/dates package"},{"depth":3,"value":"@mantine/prism package"},{"depth":3,"value":"New @mantine/core components"},{"depth":3,"value":"@mantine/core changes"},{"depth":3,"value":"New @mantine/hooks hooks"},{"depth":2,"value":"1.3.0 – June 2021"},{"depth":3,"value":"New components and features"},{"depth":3,"value":"Other changes"},{"depth":2,"value":"1.1.0 – May 2021"},{"depth":3,"value":"New components and features"},{"depth":3,"value":"API Changes"},{"depth":3,"value":"Other changes"}],"frontmatter":{"title":"Changelog","package":null,"slug":"/pages/changelog/","props":null,"import":null,"docs":null,"source":null,"description":null,"bundleSize":null,"installation":null,"pageTitle":null,"license":null,"styles":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Changelog\",\n  \"slug\": \"/pages/changelog/\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar GatsbyLink = makeShortcode(\"GatsbyLink\");\nvar Demo = makeShortcode(\"Demo\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"changelog\"\n  }, \"Changelog\"), mdx(\"h2\", {\n    \"id\": \"220--august-2021\"\n  }, \"2.2.0 \\u2013 August 2021\"), mdx(\"h3\", {\n    \"id\": \"new-components-and-hooks\"\n  }, \"New components and hooks\"), mdx(\"p\", null, \"New \", mdx(GatsbyLink, {\n    to: \"/core/multi-select/\",\n    mdxType: \"GatsbyLink\"\n  }, \"MultiSelect\"), \" component allows you to create searchable select\\nwith option to customize labels and options:\"), mdx(Demo, {\n    data: MultiSelectDemos.countries,\n    demoProps: {\n      toggle: true,\n      zIndex: 4\n    },\n    mdxType: \"Demo\"\n  }), mdx(\"p\", null, \"New \", mdx(GatsbyLink, {\n    to: \"/hooks/use-idle/\",\n    mdxType: \"GatsbyLink\"\n  }, \"use-idle\"), \" hook allows to detect if user does nothing:\"), mdx(Demo, {\n    data: useIdleHook,\n    demoProps: {\n      toggle: true\n    },\n    mdxType: \"Demo\"\n  }), mdx(\"p\", null, \"New \", mdx(GatsbyLink, {\n    to: \"/hooks/use-fullscreen/\",\n    mdxType: \"GatsbyLink\"\n  }, \"use-fullscreen\"), \" hook allows to work with Fullscreen API:\"), mdx(Demo, {\n    data: useFullscreenDemo,\n    demoProps: {\n      toggle: true\n    },\n    mdxType: \"Demo\"\n  }), mdx(\"p\", null, \"New \", mdx(GatsbyLink, {\n    to: \"/hooks/use-move/\",\n    mdxType: \"GatsbyLink\"\n  }, \"use-move\"), \" hook handles move behavior over any element,\\nyou can use it to build custom sliders, color pickers, etc.:\"), mdx(Demo, {\n    data: useMoveUsage,\n    demoProps: {\n      toggle: true\n    },\n    mdxType: \"Demo\"\n  }), mdx(\"h3\", {\n    \"id\": \"other-changes\"\n  }, \"Other changes\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(GatsbyLink, {\n    to: \"/core/menu/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Menu\"), \" and \", mdx(GatsbyLink, {\n    to: \"/core/radio-group/\",\n    mdxType: \"GatsbyLink\"\n  }, \"RadioGroup\"), \" components now works differently with Styles API \\u2013 all styles and classNames should be added to root Menu/RadioGroup component instead of MenuItem/Radio\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(GatsbyLink, {\n    to: \"/core/card/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Card\"), \" component no longer has context styles for images and dividers, use new CardSection component instead\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"@mantine/tag-picker package is deprecated \\u2013 use \", mdx(GatsbyLink, {\n    to: \"/core/multi-select/\",\n    mdxType: \"GatsbyLink\"\n  }, \"MultiSelect\"), \" instead\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You can now customize shadow and padding in \", mdx(GatsbyLink, {\n    to: \"/core/modal/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Modal\"), \" component\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(GatsbyLink, {\n    to: \"/core/button/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Button\"), \" now supports compact option which reduces its height and horizontal padding\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(GatsbyLink, {\n    to: \"/core/image/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Image\"), \" now supports adding figcaption\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"New \", mdx(GatsbyLink, {\n    to: \"/core/mark/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Mark\"), \" component \\u2013 mark tag with theme styles\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(GatsbyLink, {\n    to: \"/core/menu/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Menu\"), \" component now supports labels in menu body and behavior customization (focus trap and close on scroll)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"4 new premade pop-\", \"*\", \" transitions were added to \", mdx(GatsbyLink, {\n    to: \"/core/transition/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Transition\"), \" component\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"New \", mdx(GatsbyLink, {\n    to: \"/hooks/use-logger/\",\n    mdxType: \"GatsbyLink\"\n  }, \"use-logger\"), \" hook will log given values each time component renders\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(GatsbyLink, {\n    to: \"/core/select/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Select\"), \", \", mdx(GatsbyLink, {\n    to: \"/core/native-select/\",\n    mdxType: \"GatsbyLink\"\n  }, \"NativeSelect\"), \" and \", mdx(GatsbyLink, {\n    to: \"/core/autocomplete/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Autocomplete\"), \" components now support data as an array of strings\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"New \", mdx(GatsbyLink, {\n    to: \"/hooks/use-logger/\",\n    mdxType: \"GatsbyLink\"\n  }, \"use-logger\"), \" hook \\u2013 a drop in replacement for useEffect with shallow comparison instead of referential\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(GatsbyLink, {\n    to: \"/hooks/use-scroll-lock/\",\n    mdxType: \"GatsbyLink\"\n  }, \"use-scroll-lock\"), \" hook now support state managing inside hook\")), mdx(\"h2\", {\n    \"id\": \"210--july-2021\"\n  }, \"2.1.0 \\u2013 July 2021\"), mdx(\"h3\", {\n    \"id\": \"new-hooks-and-components\"\n  }, \"New hooks and components\"), mdx(\"p\", null, \"New \", mdx(GatsbyLink, {\n    to: \"/hooks/use-hotkeys/\",\n    mdxType: \"GatsbyLink\"\n  }, \"use-hotkeys\"), \" hook allows you to subscribe to multiple\\nhotkeys with single hook (document element) or function (any other element):\"), mdx(Demo, {\n    data: useHotkeysHook,\n    demoProps: {\n      toggle: true\n    },\n    mdxType: \"Demo\"\n  }), mdx(\"p\", null, \"New \", mdx(GatsbyLink, {\n    to: \"/hooks/use-intersection/\",\n    mdxType: \"GatsbyLink\"\n  }, \"use-intersection\"), \" hook allows you to get information\\nabout intersection of given element with its scroll container or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"document.body\"), \":\"), mdx(Demo, {\n    data: useIntersectionDemo,\n    demoProps: {\n      toggle: true\n    },\n    mdxType: \"Demo\"\n  }), mdx(\"p\", null, \"Get and set hash in url with new \", mdx(GatsbyLink, {\n    to: \"/hooks/use-hash/\",\n    mdxType: \"GatsbyLink\"\n  }, \"use-hash\"), \" hook:\"), mdx(Demo, {\n    data: useHashHook,\n    demoProps: {\n      toggle: true\n    },\n    mdxType: \"Demo\"\n  }), mdx(\"h3\", {\n    \"id\": \"other-new-features\"\n  }, \"Other new features\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(GatsbyLink, {\n    to: \"/core/highlight/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Highlight\"), \" component now supports multiple substrings highlight and highlighting of the same string multiple times\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(GatsbyLink, {\n    to: \"/core/tabs/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Tabs\"), \" component now supports vertical orientation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(GatsbyLink, {\n    to: \"/core/input/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Input\"), \" and all other components that use it (Select, Textarea, TextInput, Autocomplete, etc.) now supports headless variant without Mantine styles to help you create your own custom input styles with Styles API\")), mdx(\"h2\", {\n    \"id\": \"200--july-2021\"\n  }, \"2.0.0 \\u2013 July 2021\"), mdx(\"h3\", {\n    \"id\": \"breaking-changes\"\n  }, \"Breaking changes\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"All inputs no longer support \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"inputStyle\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"inputClassName\"), \" props, this feature was replaced by \", mdx(GatsbyLink, {\n    to: \"/theming/styles-api/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Styles API\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(GatsbyLink, {\n    to: \"/core/burger/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Burger\"), \" component no longer uses colors from theme, use hex color value instead\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Select component was renamed to \", mdx(GatsbyLink, {\n    to: \"/core/native-select\",\n    mdxType: \"GatsbyLink\"\n  }, \"NativeSelect\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ElementsGroup\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Hr\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"CardsGrid\"), \" components are replaced and no longer exported from @mantine/core package\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"All inputs variant is set by default to filled in dark theme\")), mdx(\"h3\", {\n    \"id\": \"new-theming-options\"\n  }, \"New theming options\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"@mantine/core package now exports \", mdx(GatsbyLink, {\n    to: \"/theming/global-styles/\",\n    mdxType: \"GatsbyLink\"\n  }, \"GlobalStyles and NormalizeCSS\"), \" components to include global styles\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"New \", mdx(GatsbyLink, {\n    to: \"/theming/styles-api/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Styles API\"), \" allows you to style any part of Mantine components with inline styles or classes\")), mdx(Demo, {\n    data: TabsDemos.stylesApi,\n    mdxType: \"Demo\"\n  }), mdx(\"h3\", {\n    \"id\": \"mantinedates-package\"\n  }, \"@mantine/dates package\"), mdx(GatsbyLink, {\n    to: \"/dates/getting-started/\",\n    mdxType: \"GatsbyLink\"\n  }, \"@mantine/dates\"), \" is a new package that includes date pickers and calendars:\", mdx(\"br\", null), mdx(\"br\", null), mdx(GatsbyLink, {\n    to: \"/dates/date-picker/\",\n    mdxType: \"GatsbyLink\"\n  }, \"DatePicker\"), \" allows you to capture dates without free user input. Component supports the same props as any other input from @mantine/core library and can be used in forms:\", mdx(Demo, {\n    data: DatePickerDemos.usage,\n    demoProps: {\n      toggle: true,\n      zIndex: 5\n    },\n    mdxType: \"Demo\"\n  }), mdx(GatsbyLink, {\n    to: \"/dates/date-range-picker/\",\n    mdxType: \"GatsbyLink\"\n  }, \"DateRangePicker\"), \" allows you to capture dates range from user:\", mdx(Demo, {\n    data: DateRangePickerDemos.usage,\n    demoProps: {\n      toggle: true,\n      zIndex: 4\n    },\n    mdxType: \"Demo\"\n  }), mdx(GatsbyLink, {\n    to: \"/dates/time-input/\",\n    mdxType: \"GatsbyLink\"\n  }, \"TimeInput\"), \" component allows to capture time input from user:\", mdx(Demo, {\n    data: TimeInputDemos.usage,\n    demoProps: {\n      toggle: true\n    },\n    mdxType: \"Demo\"\n  }), mdx(GatsbyLink, {\n    to: \"/dates/calendar/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Calendar\"), \" component allows you to capture date input fom user or display events:\", mdx(Demo, {\n    data: CalendarDemos.usage,\n    demoProps: {\n      toggle: true\n    },\n    mdxType: \"Demo\"\n  }), mdx(\"p\", null, \"Capture dates range input with \", mdx(GatsbyLink, {\n    to: \"/dates/range-calendar/\",\n    mdxType: \"GatsbyLink\"\n  }, \"RangeCalendar\"), \" component:\"), mdx(Demo, {\n    data: RangeCalendarDemos.usage,\n    demoProps: {\n      toggle: true\n    },\n    mdxType: \"Demo\"\n  }), mdx(GatsbyLink, {\n    to: \"/dates/month/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Month\"), \" component displays given month, it is the most basic component which is used in all other components. You can use it to create your own date pickers and calendars if Mantine components do not fit your requirements:\", mdx(Demo, {\n    data: MonthDemos.usage,\n    demoProps: {\n      toggle: true\n    },\n    mdxType: \"Demo\"\n  }), mdx(\"h3\", {\n    \"id\": \"mantineprism-package\"\n  }, \"@mantine/prism package\"), mdx(GatsbyLink, {\n    to: \"/others/prism/\",\n    mdxType: \"GatsbyLink\"\n  }, \"@mantine/prism\"), \" is a new package that allows you to highlight code with your theme colors just like in Mantine docs:\", mdx(Demo, {\n    data: PrismDemos.usage,\n    demoProps: {\n      toggle: true\n    },\n    mdxType: \"Demo\"\n  }), mdx(\"h3\", {\n    \"id\": \"new-mantinecore-components\"\n  }, \"New @mantine/core components\"), mdx(GatsbyLink, {\n    to: \"/core/accordion/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Accordion\"), \" component:\", mdx(Demo, {\n    data: AccordionDemos.label,\n    demoProps: {\n      toggle: true\n    },\n    mdxType: \"Demo\"\n  }), mdx(GatsbyLink, {\n    to: \"/core/select/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Select\"), \" component:\", mdx(Demo, {\n    data: SelectDemos.itemComponent,\n    demoProps: {\n      toggle: true,\n      zIndex: 5\n    },\n    mdxType: \"Demo\"\n  }), mdx(GatsbyLink, {\n    to: \"/core/autocomplete/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Autocomplete\"), \" component:\", mdx(Demo, {\n    data: AutocompleteDemos.itemComponent,\n    demoProps: {\n      toggle: true,\n      zIndex: 4\n    },\n    mdxType: \"Demo\"\n  }), mdx(GatsbyLink, {\n    to: \"/core/json-input/\",\n    mdxType: \"GatsbyLink\"\n  }, \"JsonInput\"), \" component:\", mdx(Demo, {\n    data: JsonInputDemos.usage,\n    demoProps: {\n      toggle: true\n    },\n    mdxType: \"Demo\"\n  }), mdx(GatsbyLink, {\n    to: \"/core/slider/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Slider and RangeSlider\"), \" components:\", mdx(Demo, {\n    data: SliderDemos.configurator,\n    demoProps: {\n      toggle: true\n    },\n    mdxType: \"Demo\"\n  }), mdx(GatsbyLink, {\n    to: \"/core/affix/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Affix\"), \" components:\", mdx(Demo, {\n    data: AffixDemos.usage,\n    demoProps: {\n      toggle: true\n    },\n    mdxType: \"Demo\"\n  }), mdx(\"h3\", {\n    \"id\": \"mantinecore-changes\"\n  }, \"@mantine/core changes\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(GatsbyLink, {\n    to: \"/core/tabs/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Tabs\"), \" component now supports unstyled and pills variants\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"All inputs now support \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"size\"), \" prop\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(GatsbyLink, {\n    to: \"/core/drawer/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Drawer\"), \" component now support title and close button\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(GatsbyLink, {\n    to: \"/core/tooltip/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Tooltip\"), \" component now displays tooltip on focus by default\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(GatsbyLink, {\n    to: \"/core/menu/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Menu\"), \" component now closes on scroll to prevent incorrect focus handling\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(GatsbyLink, {\n    to: \"/core/menu/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Menu\"), \" component now supports hover trigger\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"3 new premade transitions were added to \", mdx(GatsbyLink, {\n    to: \"/core/transition/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Transition\"), \": scale-y, scale-x and scale\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"@mantine/core now exports new \", mdx(GatsbyLink, {\n    to: \"/core/button/#unstyled-button\",\n    mdxType: \"GatsbyLink\"\n  }, \"UnstyledButton\"), \" component that can be used to create custom buttons\")), mdx(\"h3\", {\n    \"id\": \"new-mantinehooks-hooks\"\n  }, \"New @mantine/hooks hooks\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(GatsbyLink, {\n    to: \"/hooks/use-did-update\",\n    mdxType: \"GatsbyLink\"\n  }, \"use-did-update\"), \" \\u2013 useEffect replacement when you do not want hook to be called on mount\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(GatsbyLink, {\n    to: \"/hooks/use-isomorphic-effect\",\n    mdxType: \"GatsbyLink\"\n  }, \"use-isomorphic-effect\"), \" \\u2013 switch between useEffect during server side rendering and useLayoutEffect after hydration\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(GatsbyLink, {\n    to: \"/hooks/use-force-update\",\n    mdxType: \"GatsbyLink\"\n  }, \"use-force-update\"), \" \\u2013 force component to rerender\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(GatsbyLink, {\n    to: \"/hooks/use-toggle\",\n    mdxType: \"GatsbyLink\"\n  }, \"use-toggle\"), \" \\u2013 switch state between two values\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(GatsbyLink, {\n    to: \"/hooks/use-uncontrolled\",\n    mdxType: \"GatsbyLink\"\n  }, \"use-uncontrolled\"), \" \\u2013 manage state for both controlled and uncontrolled components\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(GatsbyLink, {\n    to: \"/hooks/use-window-scroll\",\n    mdxType: \"GatsbyLink\"\n  }, \"use-window-scroll\"), \" \\u2013 get current scroll position and handler to scroll to given position\")), mdx(\"h2\", {\n    \"id\": \"130--june-2021\"\n  }, \"1.3.0 \\u2013 June 2021\"), mdx(\"h3\", {\n    \"id\": \"new-components-and-features\"\n  }, \"New components and features\"), mdx(GatsbyLink, {\n    to: \"/core/ring-progress/\",\n    mdxType: \"GatsbyLink\"\n  }, \"RingProgress\"), \" component displays simple circle diagrams:\", mdx(Demo, {\n    data: RingProgressDemos.usage,\n    demoProps: {\n      toggle: true\n    },\n    mdxType: \"Demo\"\n  }), mdx(GatsbyLink, {\n    to: \"/core/tabs/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Tabs\"), \" component now supports outline variant:\", mdx(Demo, {\n    data: TabsDemos.outline,\n    demoProps: {\n      toggle: true\n    },\n    mdxType: \"Demo\"\n  }), mdx(GatsbyLink, {\n    to: \"/core/badge/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Badge\"), \" component now supports dot variant:\", mdx(Demo, {\n    data: BadgeDemos.dots,\n    mdxType: \"Demo\"\n  }), mdx(GatsbyLink, {\n    to: \"/core/number-input/\",\n    mdxType: \"GatsbyLink\"\n  }, \"NumberInput\"), \" component now exposes increment/decrement handlers and supports custom controls:\", mdx(Demo, {\n    data: NumberInputDemos.handlers,\n    demoProps: {\n      toggle: true\n    },\n    mdxType: \"Demo\"\n  }), mdx(GatsbyLink, {\n    to: \"/core/center/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Center\"), \" centers content vertically and horizontally:\", mdx(Demo, {\n    data: CenterDemos.usage,\n    demoProps: {\n      toggle: true\n    },\n    mdxType: \"Demo\"\n  }), mdx(\"p\", null, \"New \", mdx(GatsbyLink, {\n    to: \"/hooks/use-interval/\",\n    mdxType: \"GatsbyLink\"\n  }, \"use-interval\"), \" hook:\"), mdx(Demo, {\n    data: useIntervalHook,\n    demoProps: {\n      toggle: true\n    },\n    mdxType: \"Demo\"\n  }), mdx(\"h3\", {\n    \"id\": \"other-changes-1\"\n  }, \"Other changes\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mantine packages are now published with commonjs and es modules \\u2013 this enables better tree shaking\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"All components props types are now exported from @mantine/core package, you can import it by adding \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Props\"), \" to component name:\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { ButtonProps } from '@mantine/core';\\n\")), mdx(\"h2\", {\n    \"id\": \"110--may-2021\"\n  }, \"1.1.0 \\u2013 May 2021\"), mdx(\"h3\", {\n    \"id\": \"new-components-and-features-1\"\n  }, \"New components and features\"), mdx(GatsbyLink, {\n    to: \"/core/segmented-control/\",\n    mdxType: \"GatsbyLink\"\n  }, \"SegmentedControl\"), \" component is an alternative to \", mdx(GatsbyLink, {\n    to: \"/core/tabs/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Tabs\"), \" and \", mdx(GatsbyLink, {\n    to: \"/core/radio-group/\",\n    mdxType: \"GatsbyLink\"\n  }, \"RadioGroup\"), \":\", mdx(Demo, {\n    data: SegmentedControlDemos.usage,\n    demoProps: {\n      toggle: true\n    },\n    mdxType: \"Demo\"\n  }), mdx(GatsbyLink, {\n    to: \"/core/popover/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Popover\"), \" component allows you to display popover section relative to given target element. Use it to render forms, complex tooltips, etc.\", mdx(Demo, {\n    data: PopoverDemos.form,\n    demoProps: {\n      toggle: true,\n      zIndex: 4\n    },\n    mdxType: \"Demo\"\n  }), mdx(GatsbyLink, {\n    to: \"/core/divider/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Divider\"), \" component now supports labels, vertical orientation and margins:\", mdx(Demo, {\n    data: DividerDemos.labels,\n    demoProps: {\n      toggle: true\n    },\n    mdxType: \"Demo\"\n  }), mdx(GatsbyLink, {\n    to: \"/core/group/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Group\"), \" component now supports vertical orientation:\", mdx(Demo, {\n    data: GroupDemos.configurator,\n    demoProps: {\n      toggle: true\n    },\n    mdxType: \"Demo\"\n  }), mdx(GatsbyLink, {\n    to: \"/core/grid/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Grid\"), \" component allows you to use flexbox grid with any columns count:\", mdx(Demo, {\n    data: GridDemos.growConfigurator,\n    demoProps: {\n      toggle: true\n    },\n    mdxType: \"Demo\"\n  }), mdx(GatsbyLink, {\n    to: \"/hooks/use-debounced-value/\",\n    mdxType: \"GatsbyLink\"\n  }, \"use-debounced-value\"), \" - hook to debounce value with useEffect:\", mdx(UseDebouncedValueBaseDemo, {\n    toggle: true,\n    mdxType: \"UseDebouncedValueBaseDemo\"\n  }), mdx(\"h3\", {\n    \"id\": \"api-changes\"\n  }, \"API Changes\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Prop typo fix in \", mdx(GatsbyLink, {\n    to: \"/core/checkbox/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Checkbox\"), \" component (\", mdx(\"del\", {\n    parentName: \"li\"\n  }, \"intermediate\"), \"\\n-> indeterminate)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Hr component replaced with \", mdx(GatsbyLink, {\n    to: \"/core/divider/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Divider\"), \" to support more options\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"ElementsGroup component replaced with \", mdx(GatsbyLink, {\n    to: \"/core/group/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Group\"), \" to support all elements positioning\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Custom component is now supported by \", mdx(GatsbyLink, {\n    to: \"/core/action-icon/\",\n    mdxType: \"GatsbyLink\"\n  }, \"ActionIcon\"), \" and \", mdx(GatsbyLink, {\n    to: \"/core/menu\",\n    mdxType: \"GatsbyLink\"\n  }, \"MenuItem\"), \" components\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(GatsbyLink, {\n    to: \"/core/modal/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Modal\"), \" and \", mdx(GatsbyLink, {\n    to: \"/core/drawer/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Drawer\"), \" components are wrapped with \", mdx(GatsbyLink, {\n    to: \"/core/portal/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Portal\"), \" by default\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(GatsbyLink, {\n    to: \"/core/loading-overlay\",\n    mdxType: \"GatsbyLink\"\n  }, \"LoadingOverlay\"), \" now supports custom loaders\")), mdx(\"h3\", {\n    \"id\": \"other-changes-2\"\n  }, \"Other changes\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Significant performance improvements with react-jss useStyles props memoization\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Dark theme improvements, all components now use more balanced transparent colors in dark theme\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"9cf3565a-89bb-5e13-b16f-e461fb36a13f","slug":"pages/changelog","__params":{"slug":"pages"}}},"staticQueryHashes":["2731172446","3701445061","655967936"]}