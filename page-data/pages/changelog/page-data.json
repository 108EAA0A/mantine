{"componentChunkName":"component---src-pages-mdx-slug-tsx","path":"/pages/changelog/","result":{"data":{"mdx":{"headings":[{"depth":1,"value":"Changelog"},{"depth":2,"value":"1.1.0 â€“ June 2021"},{"depth":3,"value":"New components and hooks"},{"depth":3,"value":"API Changes"},{"depth":2,"value":"Other changes"}],"frontmatter":{"title":"Changelog","package":null,"slug":"/pages/changelog/"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Changelog\",\n  \"slug\": \"/pages/changelog/\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar GatsbyLink = makeShortcode(\"GatsbyLink\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"changelog\"\n  }, \"Changelog\"), mdx(\"h2\", {\n    \"id\": \"110--june-2021\"\n  }, \"1.1.0 \\u2013 June 2021\"), mdx(\"h3\", {\n    \"id\": \"new-components-and-hooks\"\n  }, \"New components and hooks\"), mdx(GatsbyLink, {\n    to: \"/core/segmented-control/\",\n    mdxType: \"GatsbyLink\"\n  }, \"SegmentedControl\"), \" component is an alternative to \", mdx(GatsbyLink, {\n    to: \"/core/tabs/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Tabs\"), \" and \", mdx(GatsbyLink, {\n    to: \"/core/radio-group/\",\n    mdxType: \"GatsbyLink\"\n  }, \"RadioGroup\"), \":\", mdx(SegmentedControlBaseDemo, {\n    toggle: true,\n    mdxType: \"SegmentedControlBaseDemo\"\n  }), mdx(GatsbyLink, {\n    to: \"/core/popover/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Popover\"), \" component allows you to display popover section relative to given target element. Use it to render forms, complex tooltips, etc.\", mdx(PopoverFormDemo, {\n    mdxType: \"PopoverFormDemo\"\n  }), mdx(GatsbyLink, {\n    to: \"/core/divider/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Divider\"), \" component now supports labels, vertical orientation and margins:\", mdx(DividerLabelDemo, {\n    toggle: true,\n    mdxType: \"DividerLabelDemo\"\n  }), mdx(GatsbyLink, {\n    to: \"/core/group/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Group\"), \" component now supports vertical orientation:\", mdx(GroupConfigurator, {\n    mdxType: \"GroupConfigurator\"\n  }), mdx(GatsbyLink, {\n    to: \"/core/group/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Group\"), \" component allows you to use flexbox grid with any columns count:\", mdx(GridGrowConfigurator, {\n    mdxType: \"GridGrowConfigurator\"\n  }), mdx(GatsbyLink, {\n    to: \"/hooks/use-debounced-value/\",\n    mdxType: \"GatsbyLink\"\n  }, \"use-debounced-value\"), \" - hook to debounce value with useEffect:\", mdx(UseDebouncedValueBaseDemo, {\n    toggle: true,\n    mdxType: \"UseDebouncedValueBaseDemo\"\n  }), mdx(\"h3\", {\n    \"id\": \"api-changes\"\n  }, \"API Changes\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Prop typo fix in \", mdx(GatsbyLink, {\n    to: \"/core/checkbox/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Checkbox\"), \" component (\", mdx(\"del\", {\n    parentName: \"li\"\n  }, \"intermediate\"), \"\\n-> indeterminate)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Hr component replaced with \", mdx(GatsbyLink, {\n    to: \"/core/divider/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Divider\"), \" to support more options\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"ElementsGroup component replaced with \", mdx(GatsbyLink, {\n    to: \"/core/group/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Group\"), \" to support all elements positioning\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Custom component is now supported by \", mdx(GatsbyLink, {\n    to: \"/core/action-icon/\",\n    mdxType: \"GatsbyLink\"\n  }, \"ActionIcon\"), \" and \", mdx(GatsbyLink, {\n    to: \"/core/menu\",\n    mdxType: \"GatsbyLink\"\n  }, \"MenuItem\"), \" components\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(GatsbyLink, {\n    to: \"/core/modal/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Modal\"), \" and \", mdx(GatsbyLink, {\n    to: \"/core/drawer/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Drawer\"), \" components are wrapped with \", mdx(GatsbyLink, {\n    to: \"/core/portal/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Portal\"), \" by default\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(GatsbyLink, {\n    to: \"/core/loading-overlay\",\n    mdxType: \"GatsbyLink\"\n  }, \"LoadingOverlay\"), \" now supports custom loaders\")), mdx(\"h2\", {\n    \"id\": \"other-changes\"\n  }, \"Other changes\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Significant performance improvements with react-jss useStyles props memoization\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Dark theme improvements, all components now use more balanced transparent colors in dark theme\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"9cf3565a-89bb-5e13-b16f-e461fb36a13f","slug":"pages/changelog","__params":{"slug":"pages"}}},"staticQueryHashes":["1492094820","435193543"]}