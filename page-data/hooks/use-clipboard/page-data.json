{"componentChunkName":"component---src-pages-mdx-slug-tsx","path":"/hooks/use-clipboard/","result":{"data":{"mdx":{"headings":[{"depth":1,"value":"use-clipboard"},{"depth":2,"value":"Usage"},{"depth":2,"value":"API"},{"depth":2,"value":"Definition"}],"frontmatter":{"title":"use-clipboard","package":"mantine-hooks","slug":"/hooks/use-clipboard/"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"package\": \"mantine-hooks\",\n  \"title\": \"use-clipboard\",\n  \"order\": 1,\n  \"slug\": \"/hooks/use-clipboard/\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar PageHeader = makeShortcode(\"PageHeader\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"use-clipboard\"\n  }, \"use-clipboard\"), mdx(PageHeader, {\n    source: \"mantine-hooks/src/use-clipboard/use-clipboard.ts\",\n    docs: \"hooks/use-clipboard.mdx\",\n    \"package\": \"@mantine/hooks\",\n    mdxType: \"PageHeader\"\n  }), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { useClipboard } from '@mantine/hooks';\\n\")), mdx(\"h2\", {\n    \"id\": \"usage\"\n  }, \"Usage\"), mdx(\"p\", null, \"use-clipboard hook provides interface to work with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"navigator.clipboard\"), \":\"), mdx(UseClipboardDemo, {\n    mdxType: \"UseClipboardDemo\"\n  }), mdx(\"h2\", {\n    \"id\": \"api\"\n  }, \"API\"), mdx(\"p\", null, \"use-clipboard hook accepts one argument \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"options\"), \" in which copied status timeout duration is defined (defaults to 2000).\\nHook returns object with properties:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"copy\"), \" \\u2013 function to copy value to clipboard\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"copied\"), \" \\u2013 value that indicates that copy handler was called less than \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"options.timeout\"), \" ms ago\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"reset\"), \" \\u2013 function to clear timeout and reset \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"copied\"), \" to false\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"error\"), \" \\u2013 contains \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Error\"), \" object if something goes wrong\")), mdx(\"h2\", {\n    \"id\": \"definition\"\n  }, \"Definition\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"function useClipboard(\\n  options: { timeout: number } = { timeout: 2000 }\\n): {\\n  copy: (valueToCopy: any) => void;\\n  reset: () => void;\\n  error: Error;\\n  copied: boolean;\\n};\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"97a2505d-0831-55a8-817c-91884f807c2e","slug":"hooks/use-clipboard","__params":{"slug":"hooks"}}},"staticQueryHashes":["1492094820","435193543"]}