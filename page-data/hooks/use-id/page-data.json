{"componentChunkName":"component---src-pages-mdx-slug-tsx","path":"/hooks/use-id/","result":{"data":{"mdx":{"frontmatter":{"title":"use-id","package":"mantine-hooks","slug":"/hooks/use-id/"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"package\": \"mantine-hooks\",\n  \"title\": \"use-id\",\n  \"order\": 1,\n  \"slug\": \"/hooks/use-id/\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"use-id\"), mdx(PageHeader, {\n    source: \"mantine-hooks/src/hooks/use-id/use-id.ts\",\n    docs: \"hooks/use-id.mdx\",\n    \"package\": \"@mantine/hooks\",\n    mdxType: \"PageHeader\"\n  }), mdx(\"p\", null, \"use-id hook generates random id that persists across renders.\\nIt is used to bind input elements to labels.\"), mdx(\"h2\", null, \"Import\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { useId } from '@mantine/hooks';\\n\")), mdx(\"h2\", null, \"Usage\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { useId } from '@mantine/hooks';\\n\\n// returns given id -> email\\nconst providedId = useId('email');\\n\\n// generates random id if id was not provided \\u2013> mantine-j_YSXk1CdUip5gPldwCjy\\nconst randomId = useId();\\n\")), mdx(\"h2\", null, \"Example\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import React from 'react';\\nimport { useId } from '@mantine/hooks';\\n\\nfunction Example({ id }) {\\n  const uuid = useId(id);\\n\\n  return (\\n    <>\\n      <label htmlFor={uuid}>Input label</label>\\n      <input type=\\\"text\\\" id={uuid} />\\n    </>\\n  );\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"7f4f0edf-c624-5d46-8568-b6687f56b007","slug":"hooks/use-id","__params":{"slug":"hooks"}}},"staticQueryHashes":["435193543"]}