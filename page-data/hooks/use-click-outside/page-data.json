{"componentChunkName":"component---src-pages-mdx-slug-tsx","path":"/hooks/use-click-outside/","result":{"data":{"mdx":{"frontmatter":{"title":"use-click-outside","package":"mantine-hooks","slug":"/hooks/use-click-outside/"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"package\": \"mantine-hooks\",\n  \"title\": \"use-click-outside\",\n  \"order\": 1,\n  \"slug\": \"/hooks/use-click-outside/\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"use-click-outside\"), mdx(PageHeader, {\n    source: \"mantine-hooks/src/hooks/use-click-outside/use-click-outside.ts\",\n    docs: \"hooks/use-click-outside.mdx\",\n    \"package\": \"@mantine/hooks\",\n    mdxType: \"PageHeader\"\n  }), mdx(\"p\", null, \"use-click-outside allows detection of clicks outside of specified element. It is usually used with modals\\nand dropdowns to close overlay when user clicks outside.\"), mdx(\"p\", null, \"Hook receives function as argument and calls this function once outside click was detected.\\nHook returns ref that should be passed to element on which outside clicks should be captured.\"), mdx(\"h2\", null, \"Import\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { useClickOutside } from '@mantine/hooks';\\n\")), mdx(\"h2\", null, \"Usage\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { useClickOutside } from '@mantine/hooks';\\n\\nfunction Example() {\\n  const handleClickOutside = () => console.log('Clicked outside of div');\\n  const ref = useClickOutside(handleClickOutside);\\n  return <div ref={ref} />;\\n}\\n\")), mdx(UseClickOutsideDemo, {\n    mdxType: \"UseClickOutsideDemo\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"eb9ea2bd-8221-582d-9a1a-21a314df1e03","slug":"hooks/use-click-outside","__params":{"slug":"hooks"}}},"staticQueryHashes":["435193543"]}