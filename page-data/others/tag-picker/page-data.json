{"componentChunkName":"component---src-pages-mdx-slug-tsx","path":"/others/tag-picker/","result":{"data":{"mdx":{"headings":[{"depth":1,"value":"Mantine tag picker"},{"depth":2,"value":"Installation"},{"depth":2,"value":"Usage"},{"depth":2,"value":"Create, update, delete tags"},{"depth":2,"value":"Change transitions"},{"depth":2,"value":"Multiple state"},{"depth":2,"value":"Keyboard support"},{"depth":2,"value":"Accessibility"},{"depth":2,"value":"Component props"},{"depth":2,"value":"Package information"},{"depth":3,"value":"Bundle size"},{"depth":3,"value":"Dependencies"}],"frontmatter":{"title":"Tag Picker","package":"Other packages","slug":"/others/tag-picker/"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"package\": \"Other packages\",\n  \"title\": \"Tag Picker\",\n  \"order\": 1,\n  \"slug\": \"/others/tag-picker/\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar PageHeader = makeShortcode(\"PageHeader\");\nvar GatsbyLink = makeShortcode(\"GatsbyLink\");\nvar PropsTable = makeShortcode(\"PropsTable\");\nvar BundleSize = makeShortcode(\"BundleSize\");\nvar Dependencies = makeShortcode(\"Dependencies\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"mantine-tag-picker\"\n  }, \"Mantine tag picker\"), mdx(PageHeader, {\n    source: \"mantine-tag-picker/src\",\n    docs: \"others/tag-picker.mdx\",\n    \"package\": \"@mantine/tag-picker\",\n    mdxType: \"PageHeader\"\n  }), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.notion.so/\"\n  }, \"Notion\"), \" style tag picker with full keyboard support.\"), mdx(\"h2\", {\n    \"id\": \"installation\"\n  }, \"Installation\"), mdx(\"p\", null, \"With yarn:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"yarn add react-jss @mantine/hooks @mantine/core @mantine/tag-picker\\n\")), mdx(\"p\", null, \"With npm:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"npm install react-jss @mantine/hooks @mantine/core @mantine/tag-picker\\n\")), mdx(\"p\", null, \"With \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.npmjs.com/package/install-peerdeps\"\n  }, \"peerdeps\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"npx install-peerdeps @mantine/tag-picker\\n\")), mdx(\"h2\", {\n    \"id\": \"usage\"\n  }, \"Usage\"), mdx(\"p\", null, \"Mockdata used in all examples:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"const mockdata = [\\n  { id: 'home', name: 'Home', color: 'teal' },\\n  { id: 'pets', name: 'Pets', color: 'blue' },\\n  { id: 'subscriptions', name: 'Subscriptions', color: 'red' },\\n  { id: 'personal-projects', name: 'Personal projects', color: 'lime' },\\n  { id: 'healthcare', name: 'Healthcare', color: 'orange' },\\n  { id: 'entertainment', name: 'Entertainment', color: 'violet' },\\n  { id: 'rent', name: 'Rent', color: 'indigo' },\\n  { id: 'gifts', name: 'Gifts', color: 'yellow' },\\n];\\n\")), mdx(\"p\", null, \"Bare minimum example with usage as custom select:\"), mdx(TagPickerMinimalDemo, {\n    mdxType: \"TagPickerMinimalDemo\"\n  }), mdx(\"h2\", {\n    \"id\": \"create-update-delete-tags\"\n  }, \"Create, update, delete tags\"), mdx(\"p\", null, \"Enhance tag picker with extra logic:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"enableCreate\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"onTagCreate\"), \" \\u2013 to allow new tags creation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"enableUpdate\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"onTagUpdate\"), \" \\u2013 to allow updates of existing tags\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"enableColorChange\"), \" \\u2013 to allow color change (won't work without \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"enableUpdate\"), \" option)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"enableDelete\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"onTagDelete\"), \" \\u2013 to allow delete existing tags\")), mdx(TagPickerBaseDemo, {\n    mdxType: \"TagPickerBaseDemo\"\n  }), mdx(\"h2\", {\n    \"id\": \"change-transitions\"\n  }, \"Change transitions\"), mdx(\"p\", null, \"TagPicker is built with \", mdx(GatsbyLink, {\n    to: \"/core/transition/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Transition\"), \" component.\"), mdx(\"p\", null, \"You can change transitions with props:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"transition\"), \" \\u2013 premade transition or transition object\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"transitionDuration\"), \" \\u2013 transition duration in ms, defaults to 200ms.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"transitionTimingFunction\"), \" \\u2013 timing function, defaults to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"theme.transitionTimingFunction\"))), mdx(TagPickerTransitionsDemo, {\n    mdxType: \"TagPickerTransitionsDemo\"\n  }), mdx(\"h2\", {\n    \"id\": \"multiple-state\"\n  }, \"Multiple state\"), mdx(\"p\", null, \"Multiple state is not currently supported, feel free to add this feature and add \", mdx(GatsbyLink, {\n    to: \"/pages/contribute/\",\n    mdxType: \"GatsbyLink\"\n  }, \"open pull request\"), \".\"), mdx(\"h2\", {\n    \"id\": \"keyboard-support\"\n  }, \"Keyboard support\"), mdx(\"p\", null, \"You can perform all actions within component with keyboard only:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When tags list is open use up and down arrows to select tag, then hit Enter to submit\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"With opened tags list use Tab key to focus tag edit control, hit Space or Enter to open it\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When tag edit menu is opened hit Escape to close it or Enter to submit value\")), mdx(\"h2\", {\n    \"id\": \"accessibility\"\n  }, \"Accessibility\"), mdx(\"p\", null, \"To provide better screen readers support use these props:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<TagPicker\\n  saveLabel=\\\"Save changes\\\" // -> aria-label for save control inside tag edit dropdown\\n  tagNameEditLabel=\\\"Update tag name\\\" // -> aria-label for tag name field\\n  editTagLabel=\\\"Edit tag\\\" // -> aria-label for tag edit dropdown control (horizontal dots)\\n/>\\n\")), mdx(\"p\", null, \"To connect TagPicker to label use either: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"labelledBy\"), \" prop to set \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"aria-labelledby\"), \" on control\\nor \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"controlId\"), \" prop to connect with id:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"// with id: when label is clicked tag picker control is focused\\n<label htmlFor=\\\"my-tag-picker\\\">My tag picker</label>\\n<TagPicker controlId=\\\"my-tag-picker\\\" />\\n\\n// with labelledBy: still supports screen readers but does not focus on click\\n<div id=\\\"my-tag-picker\\\">My tag picker</div>\\n<TagPicker labelledBy=\\\"my-tag-picker\\\" />\\n\")), mdx(\"h2\", {\n    \"id\": \"component-props\"\n  }, \"Component props\"), mdx(PropsTable, {\n    component: \"TagPickerContainer\",\n    mdxType: \"PropsTable\"\n  }), mdx(\"h2\", {\n    \"id\": \"package-information\"\n  }, \"Package information\"), mdx(\"h3\", {\n    \"id\": \"bundle-size\"\n  }, \"Bundle size\"), mdx(BundleSize, {\n    packageName: \"@mantine/tag-picker\",\n    mdxType: \"BundleSize\"\n  }), mdx(\"h3\", {\n    \"id\": \"dependencies\"\n  }, \"Dependencies\"), mdx(Dependencies, {\n    packageName: \"@mantine/tag-picker\",\n    dependencies: [{\n      name: '@mantine/hooks',\n      type: 'peer'\n    }, {\n      name: '@mantine/core',\n      type: 'peer'\n    }, {\n      name: 'react',\n      type: 'peer'\n    }, {\n      name: 'react-dom',\n      type: 'peer'\n    }, {\n      name: 'react-jss',\n      type: 'peer',\n      why: 'CSS-in-JS library used to style all components'\n    }, {\n      name: 'clsx',\n      type: 'dependency',\n      why: 'Utility to construct className stings conditionally'\n    }],\n    mdxType: \"Dependencies\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"44625d57-1a8f-5cb1-9ac6-2f39cff42d18","slug":"others/tag-picker","__params":{"slug":"others"}}},"staticQueryHashes":["1492094820","435193543"]}