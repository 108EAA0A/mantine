{"componentChunkName":"component---src-pages-mdx-slug-tsx","path":"/others/tag-picker/","result":{"data":{"mdx":{"headings":[{"depth":1,"value":"Mantine tag picker"},{"depth":2,"value":"Installation"},{"depth":2,"value":"Multiple state"},{"depth":2,"value":"Package information"},{"depth":3,"value":"Bundle size"},{"depth":3,"value":"Dependencies"}],"frontmatter":{"title":"Tag Picker","package":"Other packages","slug":"/others/tag-picker/"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"package\": \"Other packages\",\n  \"title\": \"Tag Picker\",\n  \"order\": 1,\n  \"slug\": \"/others/tag-picker/\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar GatsbyLink = makeShortcode(\"GatsbyLink\");\nvar BundleSize = makeShortcode(\"BundleSize\");\nvar Dependencies = makeShortcode(\"Dependencies\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"mantine-tag-picker\"\n  }, \"Mantine tag picker\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.notion.so/\"\n  }, \"Notion\"), \" style tag picker with full keyboard support.\"), mdx(\"h2\", {\n    \"id\": \"installation\"\n  }, \"Installation\"), mdx(\"p\", null, \"With yarn:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"yarn add react-jss @mantine/theme @mantine/hooks @mantine/core @mantine/tag-picker\\n\")), mdx(\"p\", null, \"With npm:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"npm install react-jss @mantine/theme @mantine/hooks @mantine/core @mantine/tag-picker\\n\")), mdx(\"p\", null, \"With \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.npmjs.com/package/install-peerdeps\"\n  }, \"peerdeps\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"npx install-peerdeps @mantine/tag-picker\\n\")), mdx(\"h2\", {\n    \"id\": \"multiple-state\"\n  }, \"Multiple state\"), mdx(\"p\", null, \"Multiple state is not currently supported, feel free to add this feature and add \", mdx(GatsbyLink, {\n    to: \"/pages/contribute/\",\n    mdxType: \"GatsbyLink\"\n  }, \"open pull request\"), \".\"), mdx(\"h2\", {\n    \"id\": \"package-information\"\n  }, \"Package information\"), mdx(\"h3\", {\n    \"id\": \"bundle-size\"\n  }, \"Bundle size\"), mdx(BundleSize, {\n    packageName: \"@mantine/tag-picker\",\n    mdxType: \"BundleSize\"\n  }), mdx(\"h3\", {\n    \"id\": \"dependencies\"\n  }, \"Dependencies\"), mdx(Dependencies, {\n    packageName: \"@mantine/tag-picker\",\n    dependencies: [{\n      name: '@mantine/theme',\n      type: 'peer'\n    }, {\n      name: '@mantine/hooks',\n      type: 'peer'\n    }, {\n      name: '@mantine/core',\n      type: 'peer'\n    }, {\n      name: 'react',\n      type: 'peer'\n    }, {\n      name: 'react-dom',\n      type: 'peer'\n    }, {\n      name: 'react-jss',\n      type: 'peer',\n      why: 'CSS-in-JS library used to style all components'\n    }, {\n      name: 'clsx',\n      type: 'dependency',\n      why: 'Utility to construct className stings conditionally'\n    }, {\n      name: '@charlietango/use-focus-trap',\n      type: 'dependency',\n      why: 'Hook is used to trap focus inside tag picker'\n    }, {\n      name: 'nanoid',\n      type: 'dependency',\n      why: 'Used for unique random id generation in use-id hook'\n    }],\n    mdxType: \"Dependencies\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"44625d57-1a8f-5cb1-9ac6-2f39cff42d18","slug":"others/tag-picker","__params":{"slug":"others"}}},"staticQueryHashes":["435193543"]}