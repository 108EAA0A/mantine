{"componentChunkName":"component---src-pages-mdx-slug-tsx","path":"/core/notification/","result":{"data":{"mdx":{"headings":[{"depth":1,"value":"Notification"},{"depth":2,"value":"Usage"},{"depth":2,"value":"Colors"},{"depth":2,"value":"Component props"}],"frontmatter":{"title":"Notification","package":"mantine-core","slug":"/core/notification/"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"package\": \"mantine-core\",\n  \"title\": \"Notification\",\n  \"order\": 1,\n  \"slug\": \"/core/notification/\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar PageHeader = makeShortcode(\"PageHeader\");\nvar GatsbyLink = makeShortcode(\"GatsbyLink\");\nvar PropsTable = makeShortcode(\"PropsTable\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"notification\"\n  }, \"Notification\"), mdx(PageHeader, {\n    source: \"mantine-core/src/Notification/Notification.tsx\",\n    docs: \"core/Notification.mdx\",\n    \"package\": \"@mantine/core\",\n    mdxType: \"PageHeader\"\n  }), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { Notification } from '@mantine/core';\\n\")), mdx(\"h2\", {\n    \"id\": \"usage\"\n  }, \"Usage\"), mdx(\"p\", null, \"Notification is a base component for notification system.\\nBuild your own or use \", mdx(GatsbyLink, {\n    to: \"/guides/notifications/\",\n    mdxType: \"GatsbyLink\"\n  }, \"@mantine/notifications\"), \" package.\"), mdx(\"p\", null, \"Notification component has 3 variants:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"default\"), \" \\u2013 with colored line on the left\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"icon\"), \" \\u2013 line is replaced with icon\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"loading\"), \" \\u2013 icon or line are replaced with \", mdx(GatsbyLink, {\n    to: \"/core/loader/\",\n    mdxType: \"GatsbyLink\"\n  }, \"Loader\"))), mdx(\"p\", null, \"You can use icons from any react icons library, for example:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://icons.modulz.app/\"\n  }, \"radix icons\"), \" (used in mantine packages)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://feathericons.com/\"\n  }, \"feather\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://react-icons.github.io/react-icons\"\n  }, \"react-icons\"))), mdx(NotificationBaseDemo, {\n    mdxType: \"NotificationBaseDemo\"\n  }), mdx(\"h2\", {\n    \"id\": \"colors\"\n  }, \"Colors\"), mdx(\"p\", null, \"You can choose any color defined in \", mdx(GatsbyLink, {\n    to: \"/theming\",\n    mdxType: \"GatsbyLink\"\n  }, \"theme\"), \":\"), mdx(NotificationConfigurator, {\n    mdxType: \"NotificationConfigurator\"\n  }), mdx(\"h2\", {\n    \"id\": \"component-props\"\n  }, \"Component props\"), mdx(PropsTable, {\n    component: \"Notification\",\n    mdxType: \"PropsTable\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"5800a76b-ea14-5a40-9faa-f06c55b79102","slug":"core/Notification","__params":{"slug":"core"}}},"staticQueryHashes":["435193543"]}