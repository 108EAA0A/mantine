{"componentChunkName":"component---src-pages-mdx-slug-tsx","path":"/core/switch/","result":{"data":{"mdx":{"headings":[{"depth":1,"value":"Switch"},{"depth":2,"value":"Usage"},{"depth":2,"value":"Sizes"},{"depth":2,"value":"Radius"},{"depth":2,"value":"Controlled"},{"depth":2,"value":"Get element ref"},{"depth":2,"value":"Component props"}],"frontmatter":{"title":"Switch","package":"mantine-core","slug":"/core/switch/"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"package\": \"mantine-core\",\n  \"title\": \"Switch\",\n  \"order\": 1,\n  \"slug\": \"/core/switch/\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar PageHeader = makeShortcode(\"PageHeader\");\nvar GatsbyLink = makeShortcode(\"GatsbyLink\");\nvar DataTable = makeShortcode(\"DataTable\");\nvar PropsTable = makeShortcode(\"PropsTable\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"switch\"\n  }, \"Switch\"), mdx(PageHeader, {\n    source: \"mantine-core/src/Switch/Switch.tsx\",\n    docs: \"core/Switch.mdx\",\n    \"package\": \"@mantine/core\",\n    mdxType: \"PageHeader\"\n  }), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { Switch } from '@mantine/core';\\n\")), mdx(\"h2\", {\n    \"id\": \"usage\"\n  }, \"Usage\"), mdx(\"p\", null, \"Switch is another variant of \", mdx(GatsbyLink, {\n    to: \"/core/Checkbox\",\n    mdxType: \"GatsbyLink\"\n  }, \"Checkbox\"), \"\\ncomponent. Use it to capture boolean value input from user.\\nFor better accessibility set \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"label\"), \" prop, it will add associated label element.\"), mdx(SwitchConfigurator, {\n    mdxType: \"SwitchConfigurator\"\n  }), mdx(\"h2\", {\n    \"id\": \"sizes\"\n  }, \"Sizes\"), mdx(\"p\", null, \"Switch has 5 predefined sizes: xs, sm, md, lg, xl.\\nSize defines label font-size (from \", mdx(GatsbyLink, {\n    to: \"/pages/theming/\",\n    mdxType: \"GatsbyLink\"\n  }, \"theme.fontSizes\"), \"), input width and height.\"), mdx(SwitchSizesDemo, {\n    mdxType: \"SwitchSizesDemo\"\n  }), mdx(\"p\", null, \"You can get switch sizes by importing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"SWITCH_SIZES\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { SWITCH_SIZES } from '@mantine/core';\\n\")), mdx(DataTable, {\n    head: ['Prop value', 'Width', 'Height'],\n    data: Object.keys(SWITCH_SIZES).map(function (size) {\n      return [size, \"\".concat(SWITCH_SIZES[size].width, \"px\"), \"\".concat(SWITCH_SIZES[size].height, \"px\")];\n    }),\n    mdxType: \"DataTable\"\n  }), mdx(\"h2\", {\n    \"id\": \"radius\"\n  }, \"Radius\"), mdx(\"p\", null, \"Radius controls border-radius of body and handle.\\nxs, sm, md, lg, xl radius values are defined in \", mdx(GatsbyLink, {\n    to: \"/pages/theming/\",\n    mdxType: \"GatsbyLink\"\n  }, \"theme.radius\"), \".\\nAlternatively you can use number to set radius in px:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Switch radius=\\\"lg\\\" /> // -> theme predefined large radius\\n<Switch radius={10} /> // -> { borderRadius: 10 }\\n\")), mdx(SwitchRadiusDemo, {\n    mdxType: \"SwitchRadiusDemo\"\n  }), mdx(\"h2\", {\n    \"id\": \"controlled\"\n  }, \"Controlled\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import React, { useState } from 'react';\\nimport { Switch } from '@mantine/core';\\n\\nfunction Demo() {\\n  const [checked, setChecked] = useState(false);\\n  return <Switch checked={checked} onChange={(event) => setChecked(event.currentTarget.checked)} />;\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"get-element-ref\"\n  }, \"Get element ref\"), mdx(\"p\", null, \"You can get input ref by passing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"elementRef\"), \" prop to Switch component:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import React, { useRef } from 'react';\\nimport { Switch } from '@mantine/core';\\n\\nfunction Demo() {\\n  const ref = useRef();\\n  return <Switch elementRef={ref} />;\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"component-props\"\n  }, \"Component props\"), mdx(PropsTable, {\n    component: \"Switch\",\n    mdxType: \"PropsTable\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"0b430a43-9dda-54a3-bd9d-6517fd62822c","slug":"core/Switch","__params":{"slug":"core"}}},"staticQueryHashes":["435193543"]}