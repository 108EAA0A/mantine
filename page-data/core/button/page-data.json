{"componentChunkName":"component---src-pages-mdx-slug-tsx","path":"/core/button/","result":{"data":{"mdx":{"headings":[{"depth":1,"value":"Button"},{"depth":2,"value":"Usage"},{"depth":2,"value":"Variants and colors"},{"depth":3,"value":"Filled variant"},{"depth":3,"value":"Light variant"},{"depth":3,"value":"Outline variant"},{"depth":3,"value":"Link variant"},{"depth":2,"value":"Change root element"},{"depth":2,"value":"Size"},{"depth":2,"value":"Radius"},{"depth":2,"value":"Full width and overflow"},{"depth":2,"value":"Compose with ElementsGroup"},{"depth":2,"value":"Get element ref"},{"depth":2,"value":"Usage with react-router and other libraries"},{"depth":2,"value":"TypeScript"},{"depth":2,"value":"Component props"}],"frontmatter":{"title":"Button","package":"mantine-core","slug":"/core/button/"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"package\": \"mantine-core\",\n  \"title\": \"Button\",\n  \"order\": 1,\n  \"slug\": \"/core/button/\",\n  \"category\": \"inputs\",\n  \"description\": \"Render button or link with button styles from mantine theme\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar PageHeader = makeShortcode(\"PageHeader\");\nvar GatsbyLink = makeShortcode(\"GatsbyLink\");\nvar DataTable = makeShortcode(\"DataTable\");\nvar PropsTable = makeShortcode(\"PropsTable\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"button\"\n  }, \"Button\"), mdx(PageHeader, {\n    source: \"mantine-core/src/Button/Button.tsx\",\n    docs: \"core/Button.mdx\",\n    \"package\": \"@mantine/core\",\n    mdxType: \"PageHeader\"\n  }), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { Button } from '@mantine/core';\\n\")), mdx(\"h2\", {\n    \"id\": \"usage\"\n  }, \"Usage\"), mdx(ButtonConfigurator, {\n    mdxType: \"ButtonConfigurator\"\n  }), mdx(ButtonComponentsDemo, {\n    mdxType: \"ButtonComponentsDemo\"\n  }), mdx(\"h2\", {\n    \"id\": \"variants-and-colors\"\n  }, \"Variants and colors\"), mdx(\"p\", null, \"Button component supports all colors defined in \", mdx(GatsbyLink, {\n    to: \"/pages/theming/\",\n    mdxType: \"GatsbyLink\"\n  }, \"theme\"), \" and has 3 variants:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"filled\"), \" (default) \\u2013 high emphasis button with dark background\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"outline\"), \" \\u2013 lower emphasis button with border and transparent background\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"link\"), \" \\u2013 lowest emphasis button that looks like regular text\")), mdx(\"p\", null, \"Default Button color is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"theme.primaryColor\"), \", to change color and variant pass \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"color\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"variant\"), \" props:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Button color=\\\"red\\\" /> // filled button with red color\\n<Button variant=\\\"outline\\\" /> // outline button with theme.primaryColor color\\n<Button variant=\\\"link\\\" color=\\\"indigo\\\" /> // indigo link button\\n\")), mdx(\"h3\", {\n    \"id\": \"filled-variant\"\n  }, \"Filled variant\"), mdx(ButtonFilledVariantDemo, {\n    mdxType: \"ButtonFilledVariantDemo\"\n  }), mdx(\"h3\", {\n    \"id\": \"light-variant\"\n  }, \"Light variant\"), mdx(ButtonLightVariantDemo, {\n    mdxType: \"ButtonLightVariantDemo\"\n  }), mdx(\"h3\", {\n    \"id\": \"outline-variant\"\n  }, \"Outline variant\"), mdx(ButtonOutlineVariantDemo, {\n    mdxType: \"ButtonOutlineVariantDemo\"\n  }), mdx(\"h3\", {\n    \"id\": \"link-variant\"\n  }, \"Link variant\"), mdx(ButtonLinkVariantDemo, {\n    mdxType: \"ButtonLinkVariantDemo\"\n  }), mdx(\"h2\", {\n    \"id\": \"change-root-element\"\n  }, \"Change root element\"), mdx(\"p\", null, \"You can use Button component both as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"button\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"a\"), \" elements\"), mdx(\"h2\", {\n    \"id\": \"size\"\n  }, \"Size\"), mdx(\"p\", null, \"Button has predefined sizes: xs, sm, md, lg, xl.\\nSize prop controls button height, padding and font-size.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Button size=\\\"sm\\\" /> // -> predefined small size\\n<Button size=\\\"xl\\\" /> // -> predefined extra large size\\n\")), mdx(\"p\", null, \"Button sizes from xl to xs:\"), mdx(ButtonSizesDemo, {\n    mdxType: \"ButtonSizesDemo\"\n  }), mdx(\"p\", null, \"You can get predefined button heights by importing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"BUTTON_SIZES\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { BUTTON_SIZES } from '@mantine/core';\\n\")), mdx(DataTable, {\n    head: ['Prop value', 'Button height'],\n    data: Object.keys(BUTTON_SIZES).map(function (size) {\n      return [size, \"\".concat(BUTTON_SIZES[size], \"px\")];\n    }),\n    mdxType: \"DataTable\"\n  }), mdx(\"h2\", {\n    \"id\": \"radius\"\n  }, \"Radius\"), mdx(\"p\", null, \"Radius has predefined values: xs, sm, md, lg, xl which are defined in \", mdx(GatsbyLink, {\n    to: \"/pages/theming/\",\n    mdxType: \"GatsbyLink\"\n  }, \"theme.radius\"), \".\\nAlternatively you can use number to set border-radius in px:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Button radius=\\\"lg\\\" /> // -> theme predefined large radius\\n<Button radius={10} /> // -> { borderRadius: 10 }\\n<Button radius={0} /> // -> remove border-radius\\n\")), mdx(\"p\", null, \"Predefined button radius from xs to xl for Button with lg size:\"), mdx(ButtonRadiusDemo, {\n    mdxType: \"ButtonRadiusDemo\"\n  }), mdx(\"h2\", {\n    \"id\": \"full-width-and-overflow\"\n  }, \"Full width and overflow\"), mdx(\"p\", null, \"Button can take full width of container if you pass \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"fullWidth\"), \" prop.\\nIf button is too large for its container, overflow content will be hidden with ellipsis.\"), mdx(ButtonFullWidthDemo, {\n    mdxType: \"ButtonFullWidthDemo\"\n  }), mdx(\"h2\", {\n    \"id\": \"compose-with-elementsgroup\"\n  }, \"Compose with ElementsGroup\"), mdx(\"p\", null, \"You can compose Button with any other components that support composition feature with \", mdx(GatsbyLink, {\n    to: \"/core/elements-group\",\n    mdxType: \"GatsbyLink\"\n  }, \"ElementsGroup\"), \" component.\"), mdx(ElementsGroupConfigurator, {\n    mdxType: \"ElementsGroupConfigurator\"\n  }), mdx(\"h2\", {\n    \"id\": \"get-element-ref\"\n  }, \"Get element ref\"), mdx(\"p\", null, \"You can get root element ref with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"elementRef\"), \" prop:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import React, { useRef } from 'react';\\nimport { Button } from '@mantine/core';\\n\\nfunction Demo() {\\n  const ref = useRef();\\n  return <Button elementRef={ref} />;\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"usage-with-react-router-and-other-libraries\"\n  }, \"Usage with react-router and other libraries\"), mdx(\"p\", null, \"You can use Button component with \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://reactrouter.com/web/guides/quick-start\"\n  }, \"react-router-dom\"), \"\\nor other similar libraries by passing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Link\"), \" as component to Button:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import React from 'react';\\nimport { Link } from 'react-router-dom';\\nimport { Button } from '@mantine/core';\\n\\nfunction Demo() {\\n  return (\\n    <Button component={Link} to=\\\"/react-router\\\">\\n      React router link\\n    </Button>\\n  );\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"typescript\"\n  }, \"TypeScript\"), mdx(\"p\", null, \"You need to pass additional types to use custom component with TypeScript\\nin case you need full type coverage for events and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"elementRef\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<Button<'button', HTMLButtonElement>\\n  component=\\\"button\\\"\\n  onClick={(event) => console.log(event)}\\n  elementRef={(node) => {\\n    window.myRef = node;\\n  }}\\n/>\\n\\n<Button<typeof Link, HTMLAnchorElement>\\n  component={Link}\\n  onClick={(event) => console.log(event)}\\n  elementRef={(node) => {\\n    window.myRef = node;\\n  }}\\n/>\\n\")), mdx(\"h2\", {\n    \"id\": \"component-props\"\n  }, \"Component props\"), mdx(PropsTable, {\n    component: \"Button\",\n    mdxType: \"PropsTable\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"02152358-4c0d-5bf2-b091-5611c44ccb55","slug":"core/Button","__params":{"slug":"core"}}},"staticQueryHashes":["1492094820","435193543"]}