{"componentChunkName":"component---src-pages-mdx-slug-tsx","path":"/core/tabs/","result":{"data":{"mdx":{"headings":[{"depth":1,"value":"Tabs"},{"depth":2,"value":"Components"},{"depth":2,"value":"Usage"},{"depth":2,"value":"Controlled Tabs"},{"depth":2,"value":"Tabs with icons"},{"depth":2,"value":"Change colors"},{"depth":2,"value":"Theme colors"},{"depth":2,"value":"Tabs position"},{"depth":2,"value":"Tab component props"},{"depth":2,"value":"Get tab control ref"},{"depth":2,"value":"Accessibility and usability"},{"depth":2,"value":"Tabs component props"},{"depth":2,"value":"Tab component props"}],"frontmatter":{"title":"Tabs","package":"mantine-core","slug":"/core/tabs/"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"package\": \"mantine-core\",\n  \"title\": \"Tabs\",\n  \"order\": 1,\n  \"slug\": \"/core/tabs/\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar PageHeader = makeShortcode(\"PageHeader\");\nvar GatsbyLink = makeShortcode(\"GatsbyLink\");\nvar PropsTable = makeShortcode(\"PropsTable\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"tabs\"\n  }, \"Tabs\"), mdx(PageHeader, {\n    source: \"mantine-core/src/Tabs/Tabs.tsx\",\n    docs: \"core/Tabs.mdx\",\n    \"package\": \"@mantine/core\",\n    mdxType: \"PageHeader\"\n  }), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { Tabs, Tab } from '@mantine/core';\\n\")), mdx(\"h2\", {\n    \"id\": \"components\"\n  }, \"Components\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Tab\"), \" \\u2013 utility component to pass data to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Tabs\"), \" component, does not render anything on its own. Do not use outside of \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Tabs\"), \" component.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Tabs\"), \" \\u2013 receives data from \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Tab\"), \" content and renders component\")), mdx(\"h2\", {\n    \"id\": \"usage\"\n  }, \"Usage\"), mdx(TabsSimpleDemo, {\n    mdxType: \"TabsSimpleDemo\"\n  }), mdx(\"h2\", {\n    \"id\": \"controlled-tabs\"\n  }, \"Controlled Tabs\"), mdx(\"p\", null, \"Tabs state can be controlled, to implement this pass \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"active\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onTabChange\"), \" props.\\nYou can also use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onTabChange\"), \" callback with uncontrolled Tabs.\"), mdx(TabsControlledDemo, {\n    mdxType: \"TabsControlledDemo\"\n  }), mdx(\"h2\", {\n    \"id\": \"tabs-with-icons\"\n  }, \"Tabs with icons\"), mdx(\"p\", null, \"You can add any React node as icon by setting \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"icon\"), \" prop on \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Tab\"), \" component.\\nIf \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"icon\"), \" prop is set, it is not necessary to pass \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"label\"), \". You can use icons from any react icons library, for example:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://icons.modulz.app/\"\n  }, \"radix icons\"), \" (used in mantine packages)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://feathericons.com/\"\n  }, \"feather\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://react-icons.github.io/react-icons\"\n  }, \"react-icons\"))), mdx(TabsIconDemo, {\n    mdxType: \"TabsIconDemo\"\n  }), mdx(\"h2\", {\n    \"id\": \"change-colors\"\n  }, \"Change colors\"), mdx(\"p\", null, \"You can change color of individual tab by passing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"color\"), \" property to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Tab\"), \" component,\\nor change color of all tabs by passing color to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Tabs\"), \" component.\\nColor that you pass to these components should be defined in \", mdx(GatsbyLink, {\n    to: \"/pages/theming/\",\n    mdxType: \"GatsbyLink\"\n  }, \"theme.colors\"), \".\"), mdx(\"p\", null, \"Color calculation prioritizes deeper values: first \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Tab color=\\\"value\\\" />\"), \" value will be used if defined, then \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Tabs color=\\\"value\\\">\"), \", after that value will be set to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"theme.primaryColor\"), \".\"), mdx(TabsColorDemo, {\n    mdxType: \"TabsColorDemo\"\n  }), mdx(\"h2\", {\n    \"id\": \"theme-colors\"\n  }, \"Theme colors\"), mdx(TabsColorConfigurator, {\n    mdxType: \"TabsColorConfigurator\"\n  }), mdx(\"h2\", {\n    \"id\": \"tabs-position\"\n  }, \"Tabs position\"), mdx(\"p\", null, \"Tabs controls position is controlled with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"grow\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"position\"), \" props.\\nIf \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"grow\"), \" property is set to true, controls will take 100% of available space\\nand \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"position\"), \" property is ignored.\"), mdx(TabsPositionConfigurator, {\n    mdxType: \"TabsPositionConfigurator\"\n  }), mdx(\"h2\", {\n    \"id\": \"tab-component-props\"\n  }, \"Tab component props\"), mdx(\"p\", null, \"In addition to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"icon\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"label\"), \" props shown before,\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Tab\"), \" component accepts \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"color\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"disabled\"), \" and any other props from regular button (e.g. style, title, aria-, data-).\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"color\"), \" prop will override \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"color\"), \" defined in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Tabs\"), \" component.\"), mdx(TabsTabPropsDemo, {\n    mdxType: \"TabsTabPropsDemo\"\n  }), mdx(\"h2\", {\n    \"id\": \"get-tab-control-ref\"\n  }, \"Get tab control ref\"), mdx(\"p\", null, \"You can get tab control ref by passing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"elementRef\"), \" prop to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Tab\"), \" component\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import React, { useRef } from 'react';\\nimport { Tabs, Tab } from '@mantine/core';\\n\\nfunction TabsDemo() {\\n  const secondTabRef = useRef();\\n\\n  return (\\n    <Tabs>\\n      <Tab label=\\\"First\\\">First tab content</Tab>\\n      <Tab label=\\\"Second\\\" elementRef={secondTabRef}>\\n        Second tab content\\n      </Tab>\\n      <Tab label=\\\"Third\\\">Third tab content</Tab>\\n    </Tabs>\\n  );\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"accessibility-and-usability\"\n  }, \"Accessibility and usability\"), mdx(\"p\", null, \"Tabs component follows \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.w3.org/TR/wai-aria-practices/examples/tabs/tabs-2/tabs.html\"\n  }, \"WAI-ARIA recommendations\"), \" on accessibility.\\nComponent fully supports keyboard events handling and has correct aria-roles:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use right and left arrow keys to change tabs\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Only selected tab control can be focused\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"All elements have correct roles: tab, tablist and tabpanel\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"aria-orientation is always set to horizontal as component does not support vertical tabs\")), mdx(\"h2\", {\n    \"id\": \"tabs-component-props\"\n  }, \"Tabs component props\"), mdx(PropsTable, {\n    component: \"Tabs\",\n    mdxType: \"PropsTable\"\n  }), mdx(\"h2\", {\n    \"id\": \"tab-component-props-1\"\n  }, \"Tab component props\"), mdx(PropsTable, {\n    component: \"Tab\",\n    mdxType: \"PropsTable\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"55869c41-d7fa-5e1c-bf89-5fad0abf5147","slug":"core/Tabs","__params":{"slug":"core"}}},"staticQueryHashes":["435193543"]}