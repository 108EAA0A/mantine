{"version":3,"sources":["webpack:///./src/pages/getting-started.tsx","webpack:///./src/components/Navbar/NavbarMainLink/NavbarMainLink.styles.ts","webpack:///./src/components/Navbar/NavbarMainLink/NavbarMainLink.tsx","webpack:///./src/components/Navbar/Navbar.styles.ts","webpack:///./src/components/Navbar/Navbar.tsx","webpack:///./src/components/Layout/Layout.styles.ts","webpack:///./src/components/Layout/Layout.tsx","webpack:///./src/components/AppContainer/AppContainer.styles.ts","webpack:///./src/components/AppContainer/AppContainer.tsx"],"names":["GettingStartedPage","createUseStyles","theme","mainLink","display","alignItems","textDecoration","color","colors","gray","fontWeight","fontSize","fontSizes","sm","padding","borderRadius","radius","marginTop","active","backgroundColor","body","marginLeft","spacing","theming","NavbarMainLink","to","className","icon","children","classes","useStyles","useMantineTheme","cx","activeClassName","variant","navbar","paddingTop","xl","Navbar","layout","inner","flex","main","lg","paddingLeft","md","Layout","size","getFontStyles","AppContainer"],"mappings":"6FAAA,gGAIe,SAASA,IACtB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,0B,oLCJSC,eACb,SAACC,GAAD,MAA0B,CACxBC,SAAU,CACRC,QAAS,OACTC,WAAY,SACZC,eAAgB,OAChBC,MAAOL,EAAMM,OAAOC,KAAK,GACzBC,WAAY,IACZC,SAAUT,EAAMU,UAAUC,GAC1BC,QAAS,EACTC,aAAcb,EAAMc,OAAOH,GAE3B,QAAS,CACPI,UAAW,IAIfC,OAAQ,CACNC,gBAAiB,gBAAGZ,EAAH,EAAGA,MAAH,OAAkCL,EAAMM,OAAOD,GAAO,KAGzEa,KAAM,CACJC,WAAYnB,EAAMoB,QAAQT,OAG9B,CAAEU,cCdW,SAASC,EAAT,GAMS,IALtBC,EAKsB,EALtBA,GACAC,EAIsB,EAJtBA,UACAC,EAGsB,EAHtBA,KACAC,EAEsB,EAFtBA,SACArB,EACsB,EADtBA,MAEMsB,EAAUC,EAAU,CAAEvB,QAAOL,MAAO6B,gBAC1C,OACE,kBAAC,OAAD,CAAML,UAAWM,YAAGH,EAAQ1B,SAAUuB,GAAYO,gBAAiBJ,EAAQX,OAAQO,GAAIA,GACrF,kBAAC,IAAD,CAAWlB,MAAOA,EAAO2B,QAAQ,SAC9BP,GAEH,yBAAKD,UAAWG,EAAQT,MAAOQ,ICxBtB3B,mBACb,SAACC,GAAD,MAA0B,CACxBiC,OAAQ,CACNC,WAAYlC,EAAMoB,QAAQe,OAG9B,CAAEd,cCKW,SAASe,EAAT,GAAsD,IAApCZ,EAAoC,EAApCA,UACzBG,EAAUC,EAAU,CAAE5B,MAAO6B,gBAEnC,OACE,yBAAKL,UAAWM,YAAGH,EAAQM,OAAQT,IACjC,kBAACF,EAAD,CAAgBC,GAAG,oBAAoBlB,MAAM,OAAOoB,KAAM,kBAAC,IAAD,OAA1D,mBAIA,kBAACH,EAAD,CAAgBC,GAAG,YAAYlB,MAAM,SAASoB,KAAM,kBAAC,IAAD,OAApD,WAIA,kBAACH,EAAD,CAAgBC,GAAG,iBAAiBlB,MAAM,OAAOoB,KAAM,kBAAC,IAAD,OAAvD,gBAIA,kBAACH,EAAD,CAAgBC,GAAG,QAAQlB,MAAM,OAAOoB,KAAM,kBAAC,IAAD,OAA9C,yBAIA,kBAACH,EAAD,CAAgBC,GAAG,aAAalB,MAAM,SAASoB,KAAM,kBAAC,IAAD,OAArD,YAIA,kBAACH,EAAD,CAAgBC,GAAG,WAAWlB,MAAM,OAAOoB,KAAM,kBAAC,IAAD,OAAjD,gBCpCS1B,mBACb,SAACC,GAAD,MAA0B,CACxBqC,OAAQ,GAERC,MAAO,CACLpC,QAAS,QAGX+B,OAAQ,CACNM,KAAM,aAGRC,KAAM,CACJD,KAAM,EACNL,WAAYlC,EAAMoB,QAAQqB,GAC1BC,YAAa1C,EAAMoB,QAAQuB,OAG/B,CAAEtB,cChBW,SAASuB,EAAT,GAA6D,IAA3ClB,EAA2C,EAA3CA,SACzBC,EAAUC,EAAU,CAAE5B,MAAO6B,gBACnC,OACE,0BAAML,UAAWG,EAAQU,QACvB,kBAAC,IAAD,CAAWb,UAAWG,EAAQW,MAAOO,KAAK,MACxC,kBAACT,EAAD,CAAQZ,UAAWG,EAAQM,SAC3B,yBAAKT,UAAWG,EAAQa,MAAOd,O,iwBCRxB3B,mBACb,SAACC,GAAD,MAA0B,CACxB,UAAW,CACTkB,KAAM,EAAF,GACC4B,YAAc9C,QAIvB,CAAEqB,cCHW,SAAS0B,EAAT,GAAmE,IAA3CrB,EAA2C,EAA3CA,SAErC,OADAE,EAAU,CAAE5B,MAAO6B,gBACZ,oCAAGH,K","file":"component---src-pages-getting-started-tsx-c4cf91e29e89823b78f0.js","sourcesContent":["import React from 'react';\nimport Layout from '../components/Layout/Layout';\nimport AppContainer from '../components/AppContainer/AppContainer';\n\nexport default function GettingStartedPage() {\n  return (\n    <AppContainer>\n      <Layout>GettingStarted</Layout>\n    </AppContainer>\n  );\n}\n","import { createUseStyles } from 'react-jss';\nimport { theming, MantineTheme } from '@mantine/core';\n\nexport default createUseStyles(\n  (theme: MantineTheme) => ({\n    mainLink: {\n      display: 'flex',\n      alignItems: 'center',\n      textDecoration: 'none',\n      color: theme.colors.gray[7],\n      fontWeight: 500,\n      fontSize: theme.fontSizes.sm,\n      padding: 5,\n      borderRadius: theme.radius.sm,\n\n      '& + &': {\n        marginTop: 5,\n      },\n    },\n\n    active: {\n      backgroundColor: ({ color }: { color: string }) => theme.colors[color][0],\n    },\n\n    body: {\n      marginLeft: theme.spacing.sm,\n    },\n  }),\n  { theming }\n);\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport cx from 'clsx';\nimport { useMantineTheme, ThemeIcon } from '@mantine/core';\nimport useStyles from './NavbarMainLink.styles';\n\ninterface NavbarMainLinkProps {\n  className?: string;\n  to: string;\n  icon: React.ReactNode;\n  children: React.ReactNode;\n  color: string;\n}\n\nexport default function NavbarMainLink({\n  to,\n  className,\n  icon,\n  children,\n  color,\n}: NavbarMainLinkProps) {\n  const classes = useStyles({ color, theme: useMantineTheme() });\n  return (\n    <Link className={cx(classes.mainLink, className)} activeClassName={classes.active} to={to}>\n      <ThemeIcon color={color} variant=\"light\">\n        {icon}\n      </ThemeIcon>\n      <div className={classes.body}>{children}</div>\n    </Link>\n  );\n}\n","import { createUseStyles } from 'react-jss';\nimport { theming, MantineTheme } from '@mantine/core';\n\nexport default createUseStyles(\n  (theme: MantineTheme) => ({\n    navbar: {\n      paddingTop: theme.spacing.xl,\n    },\n  }),\n  { theming }\n);\n","import React from 'react';\nimport cx from 'clsx';\nimport {\n  RocketIcon,\n  BlendingModeIcon,\n  GitHubLogoIcon,\n  LayersIcon,\n  LightningBoltIcon,\n  StarIcon,\n} from '@modulz/radix-icons';\nimport { useMantineTheme } from '@mantine/core';\nimport NavbarMainLink from './NavbarMainLink/NavbarMainLink';\nimport useStyles from './Navbar.styles';\n\nexport default function Navbar({ className }: { className: string }) {\n  const classes = useStyles({ theme: useMantineTheme() });\n\n  return (\n    <nav className={cx(classes.navbar, className)}>\n      <NavbarMainLink to=\"/getting-started/\" color=\"pink\" icon={<RocketIcon />}>\n        Getting started\n      </NavbarMainLink>\n\n      <NavbarMainLink to=\"/theming/\" color=\"indigo\" icon={<BlendingModeIcon />}>\n        Theming\n      </NavbarMainLink>\n\n      <NavbarMainLink to=\"/integrations/\" color=\"blue\" icon={<LayersIcon />}>\n        Integrations\n      </NavbarMainLink>\n\n      <NavbarMainLink to=\"/ssr/\" color=\"lime\" icon={<LightningBoltIcon />}>\n        Server side rendering\n      </NavbarMainLink>\n\n      <NavbarMainLink to=\"/examples/\" color=\"orange\" icon={<StarIcon />}>\n        Examples\n      </NavbarMainLink>\n\n      <NavbarMainLink to=\"/source/\" color=\"gray\" icon={<GitHubLogoIcon />}>\n        Source code\n      </NavbarMainLink>\n    </nav>\n  );\n}\n","import { createUseStyles } from 'react-jss';\nimport { theming, MantineTheme } from '@mantine/core';\n\nexport default createUseStyles(\n  (theme: MantineTheme) => ({\n    layout: {},\n\n    inner: {\n      display: 'flex',\n    },\n\n    navbar: {\n      flex: '0 0 260px',\n    },\n\n    main: {\n      flex: 1,\n      paddingTop: theme.spacing.lg,\n      paddingLeft: theme.spacing.md,\n    },\n  }),\n  { theming }\n);\n","import React from 'react';\nimport { useMantineTheme, Container } from '@mantine/core';\nimport Navbar from '../Navbar/Navbar';\nimport useStyles from './Layout.styles';\n\nexport default function Layout({ children }: { children: React.ReactNode }) {\n  const classes = useStyles({ theme: useMantineTheme() });\n  return (\n    <main className={classes.layout}>\n      <Container className={classes.inner} size=\"lg\">\n        <Navbar className={classes.navbar} />\n        <div className={classes.main}>{children}</div>\n      </Container>\n    </main>\n  );\n}\n","import { createUseStyles } from 'react-jss';\nimport { theming, MantineTheme, getFontStyles } from '@mantine/core';\n\nexport default createUseStyles(\n  (theme: MantineTheme) => ({\n    '@global': {\n      body: {\n        ...getFontStyles(theme),\n      },\n    },\n  }),\n  { theming }\n);\n","import 'normalize.css';\nimport 'typeface-roboto';\nimport 'typeface-ibm-plex-mono';\n\nimport React from 'react';\nimport { useMantineTheme } from '@mantine/core';\nimport useStyles from './AppContainer.styles';\n\nexport default function AppContainer({ children }: { children: React.ReactNode }) {\n  useStyles({ theme: useMantineTheme() });\n  return <>{children}</>;\n}\n"],"sourceRoot":""}